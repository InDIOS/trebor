/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../../trebor-transitions/node_modules/hash-sum/hash-sum.js":
/*!*****************************************************************************************************!*\
  !*** d:/DEVELOP/Work in Progress/trebor-repos/trebor-transitions/node_modules/hash-sum/hash-sum.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction pad (hash, len) {\n  while (hash.length < len) {\n    hash = '0' + hash;\n  }\n  return hash;\n}\n\nfunction fold (hash, text) {\n  var i;\n  var chr;\n  var len;\n  if (text.length === 0) {\n    return hash;\n  }\n  for (i = 0, len = text.length; i < len; i++) {\n    chr = text.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash < 0 ? hash * -2 : hash;\n}\n\nfunction foldObject (hash, o, seen) {\n  return Object.keys(o).sort().reduce(foldKey, hash);\n  function foldKey (hash, key) {\n    return foldValue(hash, o[key], key, seen);\n  }\n}\n\nfunction foldValue (input, value, key, seen) {\n  var hash = fold(fold(fold(input, key), toString(value)), typeof value);\n  if (value === null) {\n    return fold(hash, 'null');\n  }\n  if (value === undefined) {\n    return fold(hash, 'undefined');\n  }\n  if (typeof value === 'object') {\n    if (seen.indexOf(value) !== -1) {\n      return fold(hash, '[Circular]' + key);\n    }\n    seen.push(value);\n    return foldObject(hash, value, seen);\n  }\n  return fold(hash, value.toString());\n}\n\nfunction toString (o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction sum (o) {\n  return pad(foldValue(0, o, '', []).toString(16), 8);\n}\n\nmodule.exports = sum;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZDovREVWRUxPUC9Xb3JrIGluIFByb2dyZXNzL3RyZWJvci1yZXBvcy90cmVib3ItdHJhbnNpdGlvbnMvbm9kZV9tb2R1bGVzL2hhc2gtc3VtL2hhc2gtc3VtLmpzPzI0NzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFNBQVM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vLi4vLi4vdHJlYm9yLXRyYW5zaXRpb25zL25vZGVfbW9kdWxlcy9oYXNoLXN1bS9oYXNoLXN1bS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gcGFkIChoYXNoLCBsZW4pIHtcbiAgd2hpbGUgKGhhc2gubGVuZ3RoIDwgbGVuKSB7XG4gICAgaGFzaCA9ICcwJyArIGhhc2g7XG4gIH1cbiAgcmV0dXJuIGhhc2g7XG59XG5cbmZ1bmN0aW9uIGZvbGQgKGhhc2gsIHRleHQpIHtcbiAgdmFyIGk7XG4gIHZhciBjaHI7XG4gIHZhciBsZW47XG4gIGlmICh0ZXh0Lmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBoYXNoO1xuICB9XG4gIGZvciAoaSA9IDAsIGxlbiA9IHRleHQubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBjaHIgPSB0ZXh0LmNoYXJDb2RlQXQoaSk7XG4gICAgaGFzaCA9ICgoaGFzaCA8PCA1KSAtIGhhc2gpICsgY2hyO1xuICAgIGhhc2ggfD0gMDtcbiAgfVxuICByZXR1cm4gaGFzaCA8IDAgPyBoYXNoICogLTIgOiBoYXNoO1xufVxuXG5mdW5jdGlvbiBmb2xkT2JqZWN0IChoYXNoLCBvLCBzZWVuKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvKS5zb3J0KCkucmVkdWNlKGZvbGRLZXksIGhhc2gpO1xuICBmdW5jdGlvbiBmb2xkS2V5IChoYXNoLCBrZXkpIHtcbiAgICByZXR1cm4gZm9sZFZhbHVlKGhhc2gsIG9ba2V5XSwga2V5LCBzZWVuKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBmb2xkVmFsdWUgKGlucHV0LCB2YWx1ZSwga2V5LCBzZWVuKSB7XG4gIHZhciBoYXNoID0gZm9sZChmb2xkKGZvbGQoaW5wdXQsIGtleSksIHRvU3RyaW5nKHZhbHVlKSksIHR5cGVvZiB2YWx1ZSk7XG4gIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmb2xkKGhhc2gsICdudWxsJyk7XG4gIH1cbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gZm9sZChoYXNoLCAndW5kZWZpbmVkJyk7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICBpZiAoc2Vlbi5pbmRleE9mKHZhbHVlKSAhPT0gLTEpIHtcbiAgICAgIHJldHVybiBmb2xkKGhhc2gsICdbQ2lyY3VsYXJdJyArIGtleSk7XG4gICAgfVxuICAgIHNlZW4ucHVzaCh2YWx1ZSk7XG4gICAgcmV0dXJuIGZvbGRPYmplY3QoaGFzaCwgdmFsdWUsIHNlZW4pO1xuICB9XG4gIHJldHVybiBmb2xkKGhhc2gsIHZhbHVlLnRvU3RyaW5nKCkpO1xufVxuXG5mdW5jdGlvbiB0b1N0cmluZyAobykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pO1xufVxuXG5mdW5jdGlvbiBzdW0gKG8pIHtcbiAgcmV0dXJuIHBhZChmb2xkVmFsdWUoMCwgbywgJycsIFtdKS50b1N0cmluZygxNiksIDgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN1bTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../trebor-transitions/node_modules/hash-sum/hash-sum.js\n");

/***/ }),

/***/ "./main.ts":
/*!*****************************!*\
  !*** ./main.ts + 5 modules ***!
  \*****************************/
/*! no exports provided */
/*! ModuleConcatenation bailout: Cannot concat with d:/DEVELOP/Work in Progress/trebor-repos/trebor-transitions/node_modules/hash-sum/hash-sum.js (<- Module is not an ECMAScript module) */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("\n// CONCATENATED MODULE: d:/DEVELOP/Work in Progress/trebor-repos/trebor/tools/index.js\nvar _$assign = Object['assign'] || function (t) {\r\n    for (var s = void 0, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s)\r\n            if (_$hasProp(s, p))\r\n                t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nfunction _$CompCtr(attrs, template, options, parent) {\r\n    var self = this;\r\n    var props = ['$slots', '$refs', '$filters', '$directives', '_events', '_watchers'];\r\n    var _$set = function (prop, value) { _$def(self, prop, { value: value, writable: true }); };\r\n    if (!attrs)\r\n        attrs = {};\r\n    _$e(props, function (prop) { _$def(self, prop, { value: {} }); });\r\n    _$set('$parent', parent || null);\r\n    _$set('$children', []);\r\n    _$set('_subscribers', {});\r\n    _$set('$options', options);\r\n    var opts = self.$options;\r\n    if (!opts.attrs)\r\n        opts.attrs = {};\r\n    if (!opts.children)\r\n        opts.children = {};\r\n    _$e(_$CompCtr['_plugins'], function (plugin) {\r\n        plugin.fn.call(self, _$CompCtr, plugin.options);\r\n    });\r\n    if (opts.filters)\r\n        _$assign(self.$filters, opts.filters);\r\n    if (opts.directives)\r\n        _$e(opts.directives, function (drt, k) { self.$directives[k] = _$drt(drt); });\r\n    _$e(opts.attrs, function (attrOps, key) {\r\n        _$def(self, (_$isType(key, 'number') ? attrOps : key), {\r\n            get: function () {\r\n                if (_$isType(attrOps, 'string')) {\r\n                    var value = attrs[attrOps];\r\n                    return _$isType(value, 'function') ? value() : value;\r\n                }\r\n                else {\r\n                    if (!_$hasProp(attrs, key) && attrOps.required) {\r\n                        console.error(\"Attribute '\" + key + \"' must be present because it's required.\");\r\n                    }\r\n                    else {\r\n                        var value = _$isType(attrs[key], 'function') ? attrs[key]() : attrs[key];\r\n                        if (value === void 0 && _$hasProp(attrOps, 'default')) {\r\n                            var def = attrOps.default;\r\n                            value = _$isType(def, 'function') ? def() : def;\r\n                        }\r\n                        var typ = attrOps.type;\r\n                        if (typ && !_$isType(value, typ) && attrOps.required) {\r\n                            return console.error(\"Attribute '\" + key + \"' must be type '\" + typ + \"'.\");\r\n                        }\r\n                        return _$toType(value, value === void 0 ? 'undefined' : typ, self, key);\r\n                    }\r\n                }\r\n            },\r\n            set: function () {\r\n                console.error(\"Can not modify attribute '\" + key + \"' because attributes al read only.\");\r\n            },\r\n            enumerable: true, configurable: true\r\n        });\r\n    });\r\n    var data = opts.model || {};\r\n    var _loop_1 = function (key) {\r\n        if (_$hasProp(data, key)) {\r\n            var desc = Object.getOwnPropertyDescriptor(data, key);\r\n            if (desc.value && _$isArray(desc.value)) {\r\n                desc.value = new _$List(desc.value, self, key);\r\n            }\r\n            else {\r\n                if (desc.get) {\r\n                    var getter_1 = desc.get;\r\n                    desc.get = function () {\r\n                        var value = getter_1.call(self);\r\n                        if (_$isArray(value))\r\n                            value = new _$List(value, self, key);\r\n                        return value;\r\n                    };\r\n                }\r\n                if (desc.set) {\r\n                    var setter_1 = desc.set;\r\n                    desc.set = function (v) {\r\n                        if (_$isArray(v))\r\n                            v = new _$List(v, self, key);\r\n                        setter_1.call(self, v);\r\n                    };\r\n                }\r\n            }\r\n            _$def(self, key, desc);\r\n        }\r\n    };\r\n    for (var key in data) {\r\n        _loop_1(key);\r\n    }\r\n    var tpl = template(self, opts.children);\r\n    _$e(tpl, function (value, key) {\r\n        _$def(self, key, {\r\n            value: (function (key) {\r\n                var hook = key[1].toUpperCase() + key.slice(2);\r\n                var bhook = opts[\"before\" + hook];\r\n                var ahook = opts[\"after\" + hook];\r\n                return function () {\r\n                    bhook && bhook.call(this);\r\n                    key.slice(1) === 'update' ? value.call(this, this) : value.apply(this, arguments);\r\n                    ahook && ahook.call(this);\r\n                };\r\n            })(key)\r\n        });\r\n    });\r\n    _$def(self, '$data', {\r\n        get: function () {\r\n            return _$toPlainObj(this);\r\n        }\r\n    });\r\n}\r\nfunction _$plugin(fn, options) {\r\n    _$CompCtr['_plugins'] = _$CompCtr['_plugins'] || [];\r\n    _$CompCtr['_plugins'].push({ options: options, fn: fn });\r\n}\r\n_$assign(_$CompCtr.prototype, {\r\n    $get: function (path) {\r\n        return _$accesor(this, path);\r\n    },\r\n    $set: function (path, value) {\r\n        _$accesor(this, path, value);\r\n    },\r\n    $on: function (event, handler) {\r\n        var _this = this;\r\n        if (!this._events[event]) {\r\n            this._events[event] = [];\r\n        }\r\n        var i = this._events[event].push(handler);\r\n        return {\r\n            $off: function () {\r\n                _this._events[event].splice(i - 1, 1);\r\n            }\r\n        };\r\n    },\r\n    $once: function (event, handler) {\r\n        var e = this.$on(event, function (args) {\r\n            handler(args);\r\n            e.$off();\r\n        });\r\n    },\r\n    $fire: function (event, data) {\r\n        if (this._events[event]) {\r\n            _$e(this._events[event], function (handler) { handler(data); });\r\n        }\r\n    },\r\n    $notify: function (key) {\r\n        if (this._subscribers[key]) {\r\n            _$e(this._subscribers[key], function (suscriber) { suscriber(); });\r\n        }\r\n    },\r\n    $observe: function (deps, listener) {\r\n        var _this = this;\r\n        var subs = [];\r\n        if (_$isArray(deps)) {\r\n            _$e(deps, function (dep) {\r\n                subs.push({ sub: dep, i: _$subs.call(_this, dep, listener) });\r\n            });\r\n        }\r\n        else {\r\n            subs.push({ sub: deps, i: _$subs.call(this, deps, listener) });\r\n        }\r\n        return {\r\n            $unobserve: function () {\r\n                _$e(subs, function (sub) {\r\n                    _this._subscribers[sub.sub].splice(sub.i, 1);\r\n                });\r\n            }\r\n        };\r\n    },\r\n    $watch: function (key, watcher) {\r\n        var _this = this;\r\n        if (!this._watchers[key]) {\r\n            this._watchers[key] = [];\r\n        }\r\n        var i = this._watchers[key].push(watcher.bind(this));\r\n        return {\r\n            $unwatch: function () {\r\n                _this._watchers[key].splice(i - 1, 1);\r\n            }\r\n        };\r\n    }\r\n});\r\nvar array = Array.prototype;\r\nfunction _$toArgs(args, start) {\r\n    if (start === void 0) { start = 0; }\r\n    return array.slice.call(args, start);\r\n}\r\nfunction _$arrayValues(list, value, root, key) {\r\n    array.push.apply(list, value.map(function (v, i) {\r\n        if (list.length !== 0)\r\n            i += list.length;\r\n        return !(_$isType(v, _$List)) && _$isArray(v) ? new _$List(v, root, key + \".\" + i) : v;\r\n    }));\r\n}\r\nfunction _$List(value, root, key) {\r\n    var self = this;\r\n    Array.apply(self, [value.length]);\r\n    var desc = { writable: false, configurable: false, enumerable: false };\r\n    _$def(self, '_key', _$assign({ value: key }, desc));\r\n    _$def(self, '_root', _$assign({ value: root }, desc));\r\n    _$arrayValues(self, value, root, key);\r\n    desc.writable = true;\r\n    _$def(self, 'length', _$assign({ value: self.length }, desc));\r\n}\r\n_$List.prototype = Object.create(array);\r\n_$List.prototype.constructor = _$List;\r\n['pop', 'push', 'reverse', 'shift', 'sort', 'fill', 'unshift', 'splice'].forEach(function (method) {\r\n    _$List.prototype[method] = function () {\r\n        var self = this;\r\n        var old = self.slice();\r\n        var result;\r\n        if (method === 'push') {\r\n            _$arrayValues(self, _$toArgs(arguments), self._root, self._key);\r\n            result = self.length;\r\n        }\r\n        else {\r\n            result = array[method].apply(self, arguments);\r\n        }\r\n        _$dispatch(self._root, self._key, old, self.slice());\r\n        return result;\r\n    };\r\n});\r\n_$List.prototype.pull = function (index) {\r\n    var self = this;\r\n    var items = _$toArgs(arguments, 1);\r\n    var length = self.length;\r\n    if (index > length) {\r\n        length = index + 1;\r\n        var pull = new Array(index - self.length);\r\n        pull.push.apply(pull, items);\r\n        for (var i = 0; i < length; i++) {\r\n            if (i === index) {\r\n                self.push.apply(self, pull);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        self.splice.apply(self, [index, 1].concat(items));\r\n    }\r\n};\r\nfunction _$dispatch(root, key, oldVal, value) {\r\n    root.$notify(key);\r\n    if (root._watchers[key]) {\r\n        _$e(root._watchers[key], function (watcher) { watcher(oldVal, value); });\r\n    }\r\n    root.$update();\r\n}\r\nfunction _$isType(value, type) {\r\n    return _$type(type) === 'string' ? type.split('\\|').some(function (t) { return t.trim() === _$type(value); }) : value instanceof type;\r\n}\r\nfunction _$isObject(obj) {\r\n    return _$isType(obj, 'object');\r\n}\r\nfunction _$isArray(obj) {\r\n    return Array.isArray ? Array.isArray(obj) : _$isType(obj, 'array');\r\n}\r\nfunction _$toType(value, type, root, key) {\r\n    switch (type) {\r\n        case 'date':\r\n            return new Date(value);\r\n        case 'string':\r\n            return value.toString();\r\n        case 'number':\r\n            return +value;\r\n        case 'boolean':\r\n            return !!value;\r\n        case 'array':\r\n            return _$isType(value, _$List) ? value : new _$List(value, root, key);\r\n        default:\r\n            return value;\r\n    }\r\n}\r\nfunction _$type(obj) {\r\n    return /\\[object (\\w+)\\]/.exec(Object.prototype.toString.call(obj))[1].toLowerCase();\r\n}\r\nfunction _$hasProp(obj, prop) {\r\n    return obj.hasOwnProperty(prop);\r\n}\r\nfunction _$drt(directive) {\r\n    var hasProp = function (prop, instance, options, element) { return _$isObject(directive) && directive[prop] && directive[prop](instance, options, element); };\r\n    return {\r\n        $init: function (instance, options, element) {\r\n            hasProp('$init', instance, options, element);\r\n        },\r\n        $inserted: function (instance, options, element) {\r\n            hasProp('$inserted', instance, options, element);\r\n        },\r\n        $update: function (instance, options, element) {\r\n            if (_$isType(directive, 'function')) {\r\n                directive(instance, options, element);\r\n            }\r\n            else {\r\n                hasProp('$update', instance, options, element);\r\n            }\r\n        },\r\n        $destroy: function (instance, options, element) {\r\n            hasProp('$destroy', instance, options, element);\r\n        }\r\n    };\r\n}\r\nfunction _$noop() { }\r\nfunction _$add(inst, child) {\r\n    inst.$children.push(child);\r\n}\r\nfunction _$remove(inst, child) {\r\n    var index = inst.$children.indexOf(child);\r\n    index >= 0 && inst.$children.splice(index, 1);\r\n}\r\nfunction _$toStr(obj) {\r\n    var str = _$type(obj);\r\n    return !/null|undefined/.test(str) ? obj.toString() : str;\r\n}\r\nfunction _$toPlainObj(obj) {\r\n    var data = {};\r\n    _$e(_$isObject(obj) ? obj : {}, function (_v, k) {\r\n        if (k[0] !== '$' && !_$isType(obj[k], 'function')) {\r\n            if (_$isType(obj[k], _$List)) {\r\n                data[k] = obj[k].map(_$toPlainObj);\r\n            }\r\n            else if (_$isObject(obj[k])) {\r\n                data[k] = _$toPlainObj(obj[k]);\r\n            }\r\n            else {\r\n                data[k] = obj[k];\r\n            }\r\n        }\r\n    });\r\n    return _$isObject(obj) ? data : obj;\r\n}\r\nfunction _$setRef(obj, prop) {\r\n    var value = [];\r\n    _$def(obj, prop, {\r\n        get: function () {\r\n            return value.length <= 1 ? value[0] : value;\r\n        },\r\n        set: function (val) {\r\n            if (val && !~value.indexOf(val)) {\r\n                value.push(val);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n}\r\nfunction _$accesor(object, path, value) {\r\n    return path.split('.').reduce(function (obj, key, i, arr) {\r\n        if (_$isType(value, 'undefined')) {\r\n            if (obj == null) {\r\n                arr.splice(0, arr.length);\r\n                return i > 0 && obj === null ? obj : undefined;\r\n            }\r\n        }\r\n        else {\r\n            if (i === arr.length - 1) {\r\n                if (_$isType(obj, _$List) && (+key).toString() === key) {\r\n                    obj.pull(+key, value);\r\n                }\r\n                else {\r\n                    var oldVal = obj[key];\r\n                    obj[key] = !_$isType(value, _$List) && _$isArray(value) ? new _$List(value, object, key) : value;\r\n                    _$dispatch(object, path, oldVal, obj[key]);\r\n                }\r\n            }\r\n            else if (!_$isObject(obj[key])) {\r\n                obj[key] = {};\r\n            }\r\n        }\r\n        return obj ? obj[key] : null;\r\n    }, object);\r\n}\r\nfunction _$emptyElse() {\r\n    return { type: 'empty-else', $create: _$noop, $mount: _$noop, $update: _$noop, $destroy: _$noop };\r\n}\r\nfunction _$subs(dep, listener) {\r\n    if (!this._subscribers[dep]) {\r\n        this._subscribers[dep] = [];\r\n    }\r\n    return this._subscribers[dep].push(listener.bind(this)) - 1;\r\n}\r\nfunction _$def(obj, key, desc) {\r\n    Object.defineProperty(obj, key, desc);\r\n}\r\nfunction _$isKey(event, key) {\r\n    return event.key.toLowerCase() === key || !!event[key + \"Key\"];\r\n}\r\nfunction _$bindGroup(input, selection) {\r\n    var _$index = selection.indexOf(input.value);\r\n    if (input.checked && !~_$index)\r\n        selection.push(input.value);\r\n    else\r\n        selection.splice(_$index, 1);\r\n}\r\nfunction _$(selector, parent) {\r\n    return _$isType(selector, 'string') ? (parent || document).querySelector(selector) : selector;\r\n}\r\nfunction _$d() {\r\n    return document.createDocumentFragment();\r\n}\r\nfunction _$a(parent, child, sibling) {\r\n    if (_$isType(sibling, 'boolean') && sibling)\r\n        parent.parentElement.replaceChild(child, parent);\r\n    else if (!sibling)\r\n        parent.appendChild(child);\r\n    else\r\n        parent.insertBefore(child, sibling);\r\n}\r\nfunction _$as(source, dest) {\r\n    var childNodes = source.childNodes;\r\n    var attributes = source.attributes;\r\n    for (var i = 0; i < childNodes.length; i++) {\r\n        _$a(dest, childNodes[i]);\r\n    }\r\n    for (var i = 0; i < attributes.length; i++) {\r\n        var attr = attributes[i];\r\n        dest.setAttributeNS(source.namespaceURI, attr.name, attr.value);\r\n    }\r\n    source.parentElement.replaceChild(dest, source);\r\n    return dest;\r\n}\r\nfunction _$r(el, parent) {\r\n    var root = parent || el.parentElement;\r\n    if (root)\r\n        root.removeChild(el);\r\n}\r\nfunction _$ce(tagName) {\r\n    return document.createElement(tagName || 'div');\r\n}\r\nfunction _$cse(tagName) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', tagName || 'svg');\r\n}\r\nfunction _$ct(content) {\r\n    return document.createTextNode(content || '');\r\n}\r\nfunction _$cm(content) {\r\n    return document.createComment(content || '');\r\n}\r\nfunction _$sa(el, attr, value) {\r\n    el.setAttribute(attr, value);\r\n}\r\nfunction _$ga(el, attr) {\r\n    return el.getAttribute(attr);\r\n}\r\nfunction _$al(el, event, handler) {\r\n    el.addEventListener(event, handler, false);\r\n}\r\nfunction _$ul(el, event, oldHandler, newHandler) {\r\n    _$rl(el, event, oldHandler);\r\n    _$al(el, event, oldHandler = newHandler);\r\n    return oldHandler;\r\n}\r\nfunction _$rl(el, event, handler) {\r\n    el.removeEventListener(event, handler, false);\r\n}\r\nfunction _$bc(value) {\r\n    var classes = '';\r\n    if (_$isType(value, 'string')) {\r\n        classes += \" \" + value;\r\n    }\r\n    else if (_$isArray(value)) {\r\n        classes = value.map(_$bc).join(' ');\r\n    }\r\n    else if (_$isObject(value)) {\r\n        for (var key in value)\r\n            if (_$hasProp(value, key) && value[key])\r\n                classes += \" \" + key;\r\n    }\r\n    return classes.trim();\r\n}\r\nfunction _$bs(value) {\r\n    var el = _$ce();\r\n    if (_$isObject(value)) {\r\n        var style_1 = el.style;\r\n        _$e(value, function (val, prop) {\r\n            if (val !== style_1[prop]) {\r\n                style_1[prop] = val;\r\n            }\r\n        });\r\n        return style_1.cssText;\r\n    }\r\n    else if (_$isType(value, 'string')) {\r\n        return value;\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\nfunction _$f(root, obj, loop) {\r\n    var items = {}, loopParent, loopSibling;\r\n    var globs = _$toArgs(arguments, 3);\r\n    _$e(obj, function (item, i) { items[i] = loop.apply(null, [root, item, i].concat(globs)); });\r\n    return {\r\n        $create: function () {\r\n            _$e(items, function (item) { item.$create(); });\r\n        },\r\n        $mount: function (parent, sibling) {\r\n            loopParent = _$(parent);\r\n            loopSibling = _$(sibling);\r\n            _$e(items, function (item) { item.$mount(loopParent, loopSibling); });\r\n        },\r\n        $update: function (root, obj) {\r\n            var globs = _$toArgs(arguments, 2);\r\n            _$e(items, function (item, i) {\r\n                if (obj[i]) {\r\n                    item.$update.apply(item, [root, obj[i], i].concat(globs));\r\n                }\r\n                else {\r\n                    item.$destroy();\r\n                    delete items[i];\r\n                }\r\n            });\r\n            _$e(obj, function (item, i) {\r\n                if (!items[i]) {\r\n                    items[i] = loop.apply(null, [root, item, i].concat(globs));\r\n                    items[i].$create();\r\n                    items[i].$mount(loopParent, loopSibling);\r\n                }\r\n            });\r\n        },\r\n        $destroy: function () {\r\n            _$e(items, function (item) { item.$destroy(); });\r\n        }\r\n    };\r\n}\r\nfunction _$e(obj, cb) {\r\n    for (var key in obj) {\r\n        if (_$hasProp(obj, key)) {\r\n            cb(obj[key], (isNaN(+key) ? key : +key));\r\n        }\r\n    }\r\n}\r\nfunction _$is(id, css) {\r\n    var isNew = false;\r\n    var style = _$(\"#\" + id, document.head);\r\n    if (!style) {\r\n        isNew = true;\r\n        style = _$ce('style');\r\n        style.id = id;\r\n        _$sa(style, 'refs', '1');\r\n    }\r\n    if (style.textContent !== css) {\r\n        style.textContent = css;\r\n    }\r\n    if (isNew) {\r\n        _$a(document.head, style);\r\n    }\r\n    else {\r\n        var count = +_$ga(style, 'refs');\r\n        _$sa(style, 'refs', (++count).toString());\r\n    }\r\n}\r\nfunction _$ds(id) {\r\n    var style = _$(\"#\" + id, document.head);\r\n    if (style) {\r\n        var count = +_$ga(style, 'refs');\r\n        if (--count === 0) {\r\n            _$r(style, document.head);\r\n        }\r\n        else {\r\n            _$sa(style, 'refs', count.toString());\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: d:/DEVELOP/Work in Progress/trebor-repos/trebor-transitions/node_modules/hash-sum/hash-sum.js\nvar hash_sum = __webpack_require__(\"../../../../trebor-transitions/node_modules/hash-sum/hash-sum.js\");\nvar hash_sum_default = /*#__PURE__*/__webpack_require__.n(hash_sum);\n\n// CONCATENATED MODULE: d:/DEVELOP/Work in Progress/trebor-repos/trebor-transitions/transition.js\nvar HALF = .5;\r\nvar PI = Math.PI, pow = Math.pow, sin = Math.sin;\r\nvar NEWTON_ITERATIONS = 4;\r\nvar NEWTON_MIN_SLOPE = 0.001;\r\nvar SUBDIVISION_PRECISION = 0.0000001;\r\nvar SUBDIVISION_MAX_ITERATIONS = 10;\r\nvar kSplineTableSize = 11;\r\nvar kSampleStepSize = 1 / (kSplineTableSize - 1);\r\nvar float32ArraySupported = typeof Float32Array === 'function';\r\nfunction C(aA1) { return 3 * aA1; }\r\nfunction now() { return performance.now(); }\r\nfunction B(aA1, aA2) { return C(aA2) - 6 * aA1; }\r\nfunction A(aA1, aA2) { return 1 - C(aA2) + C(aA1); }\r\nfunction calcBezier(aT, aA1, aA2) {\r\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\r\n}\r\nfunction getSlope(aT, aA1, aA2) {\r\n    return C(A(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1));\r\n}\r\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\r\n    var currentX, currentT, i = 0;\r\n    do {\r\n        currentT = aA + (aB - aA) / 2;\r\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n        if (currentX > 0) {\r\n            aB = currentT;\r\n        }\r\n        else {\r\n            aA = currentT;\r\n        }\r\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n    return currentT;\r\n}\r\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\r\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n        if (currentSlope === 0) {\r\n            return aGuessT;\r\n        }\r\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n        aGuessT -= currentX / currentSlope;\r\n    }\r\n    return aGuessT;\r\n}\r\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\r\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\r\n        throw new Error('bezier x values must be in [0, 1] range');\r\n    }\r\n    if (mX1 === mY1 && mX2 === mY2) {\r\n        return function (x) { return x; };\r\n    }\r\n    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n    for (var i = 0; i < kSplineTableSize; ++i) {\r\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n    }\r\n    function getTForX(aX) {\r\n        var currentSample = 1;\r\n        var intervalStart = 0;\r\n        var lastSample = kSplineTableSize - 1;\r\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\r\n            intervalStart += kSampleStepSize;\r\n        }\r\n        --currentSample;\r\n        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\r\n        var guessForT = intervalStart + dist * kSampleStepSize;\r\n        var initialSlope = getSlope(guessForT, mX1, mX2);\r\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n        }\r\n        else if (initialSlope === 0) {\r\n            return guessForT;\r\n        }\r\n        else {\r\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n        }\r\n    }\r\n    return function (x) {\r\n        if (x === 0)\r\n            return 0;\r\n        if (x === 1)\r\n            return 1;\r\n        return calcBezier(getTForX(x), mY1, mY2);\r\n    };\r\n}\r\nfunction bounceOut(t) {\r\n    var c = .9, a = 4 / 11, b = 8 / 11;\r\n    var ca = 4356 / 361, cb = 35442 / 1805, cc = 16061 / 1805, t2 = t * t;\r\n    return t < a ? 7.5625 * t2 : t < b ? 9.075 * t2 - 9.9 * t + 3.4 : t < c ? ca * t2 - cb * t + cc : 10.8 * t * t - 20.52 * t + 10.72;\r\n}\r\nfunction bounceInOut(t) {\r\n    return t < HALF ? HALF * (1 - bounceOut(1 - t * 2)) : HALF * bounceOut(t * 2 - 1) + HALF;\r\n}\r\nfunction bounceIn(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\nfunction elasticInOut(t) {\r\n    return t < HALF\r\n        ? HALF * sin(13 * PI / 2 * 2 * t) * pow(2, 10 * (2 * t - 1))\r\n        : HALF * sin(-13 * PI / 2 * ((2 * t - 1) + 1)) * pow(2, -10 * (2 * t - 1)) + 1;\r\n}\r\nfunction elasticIn(t) {\r\n    return sin(13 * t * PI / 2) * pow(2, 10 * (t - 1));\r\n}\r\nfunction elasticOut(t) {\r\n    return sin(-13 * (t + 1) * PI / 2) * pow(2, -10 * t) + 1;\r\n}\r\nvar snap = cubicBezier(0, 1, HALF, 1);\r\nvar easeIn = cubicBezier(.42, 0, 1, 1);\r\nvar easeOut = cubicBezier(0, 0, .58, 1);\r\nvar inOut = cubicBezier(.42, 0, .58, 1);\r\nvar linear = cubicBezier(.25, .25, .75, .75);\r\nvar backIn = cubicBezier(.6, -.28, .735, .045);\r\nvar circIn = cubicBezier(.6, .04, .98, .335);\r\nvar cubicIn = cubicBezier(.55, .055, .675, .19);\r\nvar expoIn = cubicBezier(.95, .05, .795, .035);\r\nvar quadIn = cubicBezier(.55, .085, .68, .53);\r\nvar quartIn = cubicBezier(.895, .03, .685, .22);\r\nvar quintIn = cubicBezier(.755, .05, .855, .06);\r\nvar sineIn = cubicBezier(.47, 0, .745, .715);\r\nvar backOut = cubicBezier(.175, .885, .32, 1.275);\r\nvar circOut = cubicBezier(.075, .82, .165, 1);\r\nvar cubicOut = cubicBezier(.215, .61, .355, 1);\r\nvar expoOut = cubicBezier(.19, 1, .22, 1);\r\nvar quadOut = cubicBezier(.25, .46, .45, .94);\r\nvar quartOut = cubicBezier(.165, .84, .44, 1);\r\nvar quintOut = cubicBezier(.23, 1, .32, 1);\r\nvar sineOut = cubicBezier(.39, .575, .565, 1);\r\nvar backInOut = cubicBezier(.68, -.55, .265, 1.55);\r\nvar circInOut = cubicBezier(.785, .135, .15, .86);\r\nvar cubicInOut = cubicBezier(.645, .045, .355, 1);\r\nvar expoInOut = cubicBezier(1, 0, 0, 1);\r\nvar quadInOut = cubicBezier(.455, .03, .515, .955);\r\nvar quartInOut = cubicBezier(.77, 0, .175, 1);\r\nvar quintInOut = cubicBezier(.86, 0, .07, 1);\r\nvar sineInOut = cubicBezier(.445, .05, .55, .95);\r\nfunction transition(_a) {\r\n    var _b = _a.ease, ease = _b === void 0 ? easeIn : _b, duration = _a.duration, _c = _a.loop, loop = _c === void 0 ? false : _c, _d = _a.delay, delay = _d === void 0 ? 0 : _d;\r\n    var diff = 0;\r\n    var start, change, ended;\r\n    function init() {\r\n        start = now();\r\n        !this.running && (this.running = true);\r\n        requestAnimationFrame(animate.bind(this));\r\n    }\r\n    function animate(time) {\r\n        if (this.paused || !change)\r\n            return;\r\n        var fraction = (time - start + diff) / (duration || 800);\r\n        var progress = ease(fraction > 1 ? fraction = 1 : fraction);\r\n        change(progress);\r\n        if (fraction < 1) {\r\n            requestAnimationFrame(animate.bind(this));\r\n        }\r\n        else if (loop) {\r\n            diff = 0;\r\n            init.call(this);\r\n        }\r\n        else {\r\n            this.running = false;\r\n            ended && ended();\r\n        }\r\n    }\r\n    return {\r\n        paused: false,\r\n        running: false,\r\n        on: function (event, handler) {\r\n            event === 'ended' && (ended = handler);\r\n            event === 'change' && (change = handler);\r\n        },\r\n        run: function (d, l) {\r\n            delay = l || delay || 0;\r\n            duration = d || duration || 800;\r\n            delay > 0 ? setTimeout(init.bind(this), delay) : init.call(this);\r\n        },\r\n        pause: function () {\r\n            if (!this.running)\r\n                return;\r\n            this.paused = true;\r\n            diff += now() - start;\r\n        },\r\n        play: function () {\r\n            if (!this.running)\r\n                return;\r\n            this.paused = false;\r\n            init.call(this);\r\n        }\r\n    };\r\n}\r\n\n// CONCATENATED MODULE: d:/DEVELOP/Work in Progress/trebor-repos/trebor-transitions/tools.js\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\n\r\nfunction animate(options, run) {\r\n    var style = document.querySelector('[animation-style-sheet]');\r\n    if (!style) {\r\n        style = document.createElement('style');\r\n        style.setAttribute('animation-style-sheet', '');\r\n        document.head.appendChild(style);\r\n    }\r\n    var el, styleIndex;\r\n    var styleSheet = style.sheet;\r\n    var className = \"animation_\" + hash_sum_default()(run);\r\n    var _a = __assign({ delay: 0, duration: 400, ease: easeIn }, options), ease = _a.ease, delay = _a.delay, duration = _a.duration;\r\n    var inAnimation = transition({ duration: duration, delay: delay, ease: ease });\r\n    var outAnimation = transition({ duration: duration, delay: delay, ease: function (x) { return 1 - ease(1 - x); } });\r\n    function setChangeCB(node, animation) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        el = node;\r\n        var anime = animation === 'in' ? inAnimation : outAnimation;\r\n        var change = run(node);\r\n        el.classList.add(className);\r\n        anime.on('change', function (progress) {\r\n            styleSheet.cssRules.length && styleSheet.deleteRule(styleIndex);\r\n            var styleTxt = change(animation === 'in' ? progress : 1 - progress);\r\n            styleSheet.insertRule(\".\" + className + \"{\" + styleTxt + \"}\");\r\n            styleIndex = styleSheet.cssRules.length - 1;\r\n        });\r\n        anime.run.apply(anime, args);\r\n    }\r\n    return {\r\n        state: 'in',\r\n        started: false,\r\n        ended: function (handler) {\r\n            var callback = function () {\r\n                el.classList.remove(className);\r\n                handler && handler();\r\n                styleSheet.deleteRule(styleIndex);\r\n            };\r\n            inAnimation.on('ended', callback);\r\n            outAnimation.on('ended', function () {\r\n                callback();\r\n            });\r\n        },\r\n        run: function (node) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            var self = this;\r\n            if (self.state === 'in') {\r\n                self.in.apply(self, [node].concat(args));\r\n                self.state = 'out';\r\n            }\r\n            else {\r\n                self.out.apply(self, [node].concat(args));\r\n                self.state = 'in';\r\n            }\r\n        },\r\n        in: function (node) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            setChangeCB.apply(void 0, [node, 'in'].concat(args));\r\n        },\r\n        out: function (node) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            setChangeCB.apply(void 0, [node, 'out'].concat(args));\r\n        }\r\n    };\r\n}\r\n\n// CONCATENATED MODULE: d:/DEVELOP/Work in Progress/trebor-repos/trebor-transitions/index.js\nvar trebor_transitions_assign = (undefined && undefined.__assign) || function () {\r\n    trebor_transitions_assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return trebor_transitions_assign.apply(this, arguments);\r\n};\r\n\r\n\r\nfunction FadeAnimation(options) {\r\n    options = options || { delay: 0, duration: 400 };\r\n    return animate(options, function (node) {\r\n        var opacity = +(getComputedStyle(node).opacity || 0);\r\n        return function (progress) { return \"opacity: \" + progress * opacity + \";\"; };\r\n    });\r\n}\r\nfunction FlyAnimation(options) {\r\n    options = options || { delay: 0, duration: 400, x: 0, y: 0, ease: cubicOut };\r\n    return animate(options, function (node) {\r\n        var opacity, transform;\r\n        var _a = trebor_transitions_assign({ x: 0, y: 0 }, options), x = _a.x, y = _a.y;\r\n        var style = getComputedStyle(node);\r\n        opacity = +(style.opacity || 0);\r\n        transform = style.transform === 'none' ? '' : (style.transform ? style.transform + \" \" : '');\r\n        return function (progress) { return \"opacity: \" + progress * opacity + \"; \" +\r\n            (\"transform: \" + transform + \"translate(\" + (1 - progress) * (x || 0) + \"px, \" + (1 - progress) * (y || 0) + \"px);\"); };\r\n    });\r\n}\r\nfunction SlideAnimation(options) {\r\n    options = options || { delay: 0, duration: 400, ease: cubicOut };\r\n    return animate(options, function (node) {\r\n        var opacity, height, paddingTop, paddingBottom, marginTop, marginBottom, borderTopWidth, borderBottomWidth;\r\n        var style = getComputedStyle(node);\r\n        opacity = +(style.opacity || 0);\r\n        height = parseFloat(style.height || '0');\r\n        marginTop = parseFloat(style.marginTop || '0');\r\n        paddingTop = parseFloat(style.paddingTop || '0');\r\n        marginBottom = parseFloat(style.marginBottom || '0');\r\n        paddingBottom = parseFloat(style.paddingBottom || '0');\r\n        borderTopWidth = parseFloat(style.borderTopWidth || '0');\r\n        borderBottomWidth = parseFloat(style.borderBottomWidth || '0');\r\n        return function (progress) { return \"overflow: hidden;\" +\r\n            (\"height: \" + progress * height + \"px;\") +\r\n            (\"margin-top: \" + progress * marginTop + \"px;\") +\r\n            (\"padding-top: \" + progress * paddingTop + \"px;\") +\r\n            (\"margin-bottom: \" + progress * marginBottom + \"px;\") +\r\n            (\"padding-bottom: \" + progress * paddingBottom + \"px;\") +\r\n            (\"border-top-width: \" + progress * borderTopWidth + \"px;\") +\r\n            (\"opacity: \" + Math.min(progress * 20, 1) * opacity + \";\") +\r\n            (\"border-bottom-width: \" + progress * borderBottomWidth + \"px;\"); };\r\n    });\r\n}\r\n\n// CONCATENATED MODULE: ./components/animation.html\n\n\nfunction ifCondition_1(_$state) {\n  var _$frag, div_1, txt_1, _refs;\n  _$frag = _$d();\n  _refs = _$state.$refs;\n  return {\n    type: 'if',\n    $create: function () {\n      div_1 = _$ce();\n      txt_1 = _$ct('Hello word!');\n      !_refs['box'] && _$setRef(_refs, 'box');\n      _refs['box'] = div_1;\n    },\n    $mount: function (parent, sibling) {\n      this.$unmount();\n      _$a(_$(parent), _$frag, _$(sibling));\n    },\n    $update: _$noop,\n    $unmount: function () {\n      _$a(div_1, txt_1);\n      _$a(_$frag, div_1);\n    },\n    $destroy: function () {\n      this.$unmount();\n      if (_$isType(_refs['box'], 'array')) {\n        var indexDiv_1 = _refs['box'].indexOf(div_1);\n        _refs['box'].splice(indexDiv_1, 1);\n      } else {\n        delete _refs['box'];\n      }\n      _$frag = div_1 = txt_1 = _refs = void 0;\n    }\n  };\n}\nfunction condition_1(_$state) {\n  if (_$state.visible)\n    return ifCondition_1(_$state);\n  else\n    return _$emptyElse();\n}\nfunction _$tplAnimation(_$state) {\n  var _$frag, input_1, changeEvent_1, handlerChangeEvent_1, label_1, txt_1, setTxt_1, conditionAnchor_1, conditionBlock_1;\n  _$frag = _$d();\n  changeEvent_1 = function (_$state, $event, $el) {\n    _$state.onChange($el.checked);\n  };\n  setTxt_1 = function () {\n    return 'Visible: ';\n  };\n  '+(_$state.visible)+';\n  '';\n  conditionAnchor_1 = _$ct();\n  return {\n    $create: function () {\n      input_1 = _$ce('input');\n      label_1 = _$ce('label');\n      txt_1 = _$ct();\n      txt_1.data = setTxt_1(_$state);\n      conditionBlock_1 = condition_1(_$state);\n      conditionBlock_1.$create();\n      this.$hydrate();\n    },\n    $hydrate: function () {\n      _$al(input_1, 'change', handlerChangeEvent_1 = function (event) {\n        changeEvent_1(_$state, event, input_1);\n      });\n      _$sa(input_1, 'id', 'visible');\n      _$sa(input_1, 'type', 'checkbox');\n      _$sa(label_1, 'for', 'visible');\n    },\n    $mount: function (parent, sibling) {\n      this.$unmount();\n      _$is('scope_53e11e76', 'div {width:125px;padding:45px 0;color:white;text-align:center;background-color:black;}');\n      _$a(_$(parent), _$frag, _$(sibling));\n      this.$siblingEl = _$(sibling);\n      this.$parentEl = sibling && _$(sibling).parentElement || _$(parent);\n    },\n    $update: function (_$state) {\n      var updateTxt_1 = setTxt_1(_$state);\n      if (txt_1.data !== _$toStr(updateTxt_1)) {\n        txt_1.data = updateTxt_1;\n      }\n      updateTxt_1 = void 0;\n      if (conditionBlock_1 && conditionBlock_1.type === condition_1(_$state).type) {\n        conditionBlock_1.$update(_$state);\n      } else {\n        conditionBlock_1 && conditionBlock_1.$destroy();\n        conditionBlock_1 = condition_1(_$state);\n        conditionBlock_1.$create();\n        conditionBlock_1.$mount(_$state.$parentEl, conditionAnchor_1);\n      }\n    },\n    $unmount: function () {\n      _$a(_$frag, input_1);\n      _$a(label_1, txt_1);\n      _$a(_$frag, label_1);\n      _$a(_$frag, conditionAnchor_1);\n      conditionBlock_1.$mount(_$frag, conditionAnchor_1);\n    },\n    $destroy: function () {\n      this.$unmount();\n      this.$parent = null;\n      this.$parentEl = null;\n      this.$siblingEl = null;\n      this.$children.splice(0, this.$children.length);\n      _$ds('scope_53e11e76');\n      _$rl(input_1, 'change', handlerChangeEvent_1);\n      conditionBlock_1.$destroy();\n      delete _$state.$root;\n      _$frag = input_1 = changeEvent_1 = handlerChangeEvent_1 = label_1 = txt_1 = setTxt_1 = conditionAnchor_1 = conditionBlock_1 = void 0;\n    }\n  };\n}\nvar animation = SlideAnimation({\n  y: 300,\n  duration: 1200\n});\nfunction Animation(_$attrs, _$parent) {\n  _$CompCtr.call(this, _$attrs, _$tplAnimation, {\n    model: {\n      visible: false,\n      onChange: function (value) {\n        var _this = this;\n        var refs = this.$refs;\n        animation.ended(function () {\n          !value && _this.$update();\n        });\n        if (value) {\n          this.$set('visible', value);\n          animation.in(refs.box);\n        } else {\n          this.visible = value;\n          animation.out(refs.box);\n        }\n      }\n    }\n  }, _$parent);\n  !_$parent && this.$create();\n}\nAnimation.plugin = _$plugin;\nAnimation.prototype = Object.create(_$CompCtr.prototype);\nAnimation.prototype.constructor = Animation;\n/* harmony default export */ var components_animation = (Animation);\n// CONCATENATED MODULE: ./main.ts\n\r\nvar main_animation = new components_animation();\r\nmain_animation.$mount('main');\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZDovREVWRUxPUC9Xb3JrIGluIFByb2dyZXNzL3RyZWJvci1yZXBvcy90cmVib3IvdG9vbHMvaW5kZXguanM/YzBmNiIsIndlYnBhY2s6Ly8vZDovREVWRUxPUC9Xb3JrIGluIFByb2dyZXNzL3RyZWJvci1yZXBvcy90cmVib3ItdHJhbnNpdGlvbnMvdHJhbnNpdGlvbi5qcz8wNDBhIiwid2VicGFjazovLy9kOi9ERVZFTE9QL1dvcmsgaW4gUHJvZ3Jlc3MvdHJlYm9yLXJlcG9zL3RyZWJvci10cmFuc2l0aW9ucy90b29scy5qcz82YzNjIiwid2VicGFjazovLy9kOi9ERVZFTE9QL1dvcmsgaW4gUHJvZ3Jlc3MvdHJlYm9yLXJlcG9zL3RyZWJvci10cmFuc2l0aW9ucy9pbmRleC5qcz81NzQ0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvYW5pbWF0aW9uLmh0bWw/MzkzMiIsIndlYnBhY2s6Ly8vLi9tYWluLnRzPzgyNjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLHFEQUFxRCxPQUFPO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLG9CQUFvQiwrQkFBK0IsRUFBRTtBQUM3RjtBQUNBO0FBQ0EsZ0NBQWdDLG9CQUFvQixVQUFVLEVBQUUsRUFBRSxFQUFFO0FBQ3BFO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Qsa0NBQWtDLEVBQUU7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxT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T0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxtQ0FBbUMsWUFBWSxlQUFlLFlBQVksa0JBQWtCLHdCQUF3QjtBQUNwSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0U7O0FDaktvRDtBQUVwRCxJQUFNLGNBQVMsR0FBRyxJQUFJLG9CQUFTLEVBQUUsQ0FBQztBQUVsQyxjQUFTLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDIiwiZmlsZSI6Ii4vbWFpbi50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfJGFzc2lnbiA9IE9iamVjdFsnYXNzaWduJ10gfHwgZnVuY3Rpb24gKHQpIHtcclxuICAgIGZvciAodmFyIHMgPSB2b2lkIDAsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgZm9yICh2YXIgcCBpbiBzKVxyXG4gICAgICAgICAgICBpZiAoXyRoYXNQcm9wKHMsIHApKVxyXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdDtcclxufTtcclxuZXhwb3J0IGZ1bmN0aW9uIF8kQ29tcEN0cihhdHRycywgdGVtcGxhdGUsIG9wdGlvbnMsIHBhcmVudCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIHByb3BzID0gWyckc2xvdHMnLCAnJHJlZnMnLCAnJGZpbHRlcnMnLCAnJGRpcmVjdGl2ZXMnLCAnX2V2ZW50cycsICdfd2F0Y2hlcnMnXTtcclxuICAgIHZhciBfJHNldCA9IGZ1bmN0aW9uIChwcm9wLCB2YWx1ZSkgeyBfJGRlZihzZWxmLCBwcm9wLCB7IHZhbHVlOiB2YWx1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH07XHJcbiAgICBpZiAoIWF0dHJzKVxyXG4gICAgICAgIGF0dHJzID0ge307XHJcbiAgICBfJGUocHJvcHMsIGZ1bmN0aW9uIChwcm9wKSB7IF8kZGVmKHNlbGYsIHByb3AsIHsgdmFsdWU6IHt9IH0pOyB9KTtcclxuICAgIF8kc2V0KCckcGFyZW50JywgcGFyZW50IHx8IG51bGwpO1xyXG4gICAgXyRzZXQoJyRjaGlsZHJlbicsIFtdKTtcclxuICAgIF8kc2V0KCdfc3Vic2NyaWJlcnMnLCB7fSk7XHJcbiAgICBfJHNldCgnJG9wdGlvbnMnLCBvcHRpb25zKTtcclxuICAgIHZhciBvcHRzID0gc2VsZi4kb3B0aW9ucztcclxuICAgIGlmICghb3B0cy5hdHRycylcclxuICAgICAgICBvcHRzLmF0dHJzID0ge307XHJcbiAgICBpZiAoIW9wdHMuY2hpbGRyZW4pXHJcbiAgICAgICAgb3B0cy5jaGlsZHJlbiA9IHt9O1xyXG4gICAgXyRlKF8kQ29tcEN0clsnX3BsdWdpbnMnXSwgZnVuY3Rpb24gKHBsdWdpbikge1xyXG4gICAgICAgIHBsdWdpbi5mbi5jYWxsKHNlbGYsIF8kQ29tcEN0ciwgcGx1Z2luLm9wdGlvbnMpO1xyXG4gICAgfSk7XHJcbiAgICBpZiAob3B0cy5maWx0ZXJzKVxyXG4gICAgICAgIF8kYXNzaWduKHNlbGYuJGZpbHRlcnMsIG9wdHMuZmlsdGVycyk7XHJcbiAgICBpZiAob3B0cy5kaXJlY3RpdmVzKVxyXG4gICAgICAgIF8kZShvcHRzLmRpcmVjdGl2ZXMsIGZ1bmN0aW9uIChkcnQsIGspIHsgc2VsZi4kZGlyZWN0aXZlc1trXSA9IF8kZHJ0KGRydCk7IH0pO1xyXG4gICAgXyRlKG9wdHMuYXR0cnMsIGZ1bmN0aW9uIChhdHRyT3BzLCBrZXkpIHtcclxuICAgICAgICBfJGRlZihzZWxmLCAoXyRpc1R5cGUoa2V5LCAnbnVtYmVyJykgPyBhdHRyT3BzIDoga2V5KSwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmIChfJGlzVHlwZShhdHRyT3BzLCAnc3RyaW5nJykpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBhdHRyc1thdHRyT3BzXTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXyRpc1R5cGUodmFsdWUsICdmdW5jdGlvbicpID8gdmFsdWUoKSA6IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFfJGhhc1Byb3AoYXR0cnMsIGtleSkgJiYgYXR0ck9wcy5yZXF1aXJlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQXR0cmlidXRlICdcIiArIGtleSArIFwiJyBtdXN0IGJlIHByZXNlbnQgYmVjYXVzZSBpdCdzIHJlcXVpcmVkLlwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IF8kaXNUeXBlKGF0dHJzW2tleV0sICdmdW5jdGlvbicpID8gYXR0cnNba2V5XSgpIDogYXR0cnNba2V5XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09PSB2b2lkIDAgJiYgXyRoYXNQcm9wKGF0dHJPcHMsICdkZWZhdWx0JykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkZWYgPSBhdHRyT3BzLmRlZmF1bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IF8kaXNUeXBlKGRlZiwgJ2Z1bmN0aW9uJykgPyBkZWYoKSA6IGRlZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHlwID0gYXR0ck9wcy50eXBlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwICYmICFfJGlzVHlwZSh2YWx1ZSwgdHlwKSAmJiBhdHRyT3BzLnJlcXVpcmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihcIkF0dHJpYnV0ZSAnXCIgKyBrZXkgKyBcIicgbXVzdCBiZSB0eXBlICdcIiArIHR5cCArIFwiJy5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF8kdG9UeXBlKHZhbHVlLCB2YWx1ZSA9PT0gdm9pZCAwID8gJ3VuZGVmaW5lZCcgOiB0eXAsIHNlbGYsIGtleSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJDYW4gbm90IG1vZGlmeSBhdHRyaWJ1dGUgJ1wiICsga2V5ICsgXCInIGJlY2F1c2UgYXR0cmlidXRlcyBhbCByZWFkIG9ubHkuXCIpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWVcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgdmFyIGRhdGEgPSBvcHRzLm1vZGVsIHx8IHt9O1xyXG4gICAgdmFyIF9sb29wXzEgPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgaWYgKF8kaGFzUHJvcChkYXRhLCBrZXkpKSB7XHJcbiAgICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihkYXRhLCBrZXkpO1xyXG4gICAgICAgICAgICBpZiAoZGVzYy52YWx1ZSAmJiBfJGlzQXJyYXkoZGVzYy52YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIGRlc2MudmFsdWUgPSBuZXcgXyRMaXN0KGRlc2MudmFsdWUsIHNlbGYsIGtleSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGVzYy5nZXQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZ2V0dGVyXzEgPSBkZXNjLmdldDtcclxuICAgICAgICAgICAgICAgICAgICBkZXNjLmdldCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gZ2V0dGVyXzEuY2FsbChzZWxmKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF8kaXNBcnJheSh2YWx1ZSkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ldyBfJExpc3QodmFsdWUsIHNlbGYsIGtleSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGRlc2Muc2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNldHRlcl8xID0gZGVzYy5zZXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVzYy5zZXQgPSBmdW5jdGlvbiAodikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXyRpc0FycmF5KHYpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdiA9IG5ldyBfJExpc3Qodiwgc2VsZiwga2V5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0dGVyXzEuY2FsbChzZWxmLCB2KTtcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF8kZGVmKHNlbGYsIGtleSwgZGVzYyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7XHJcbiAgICAgICAgX2xvb3BfMShrZXkpO1xyXG4gICAgfVxyXG4gICAgdmFyIHRwbCA9IHRlbXBsYXRlKHNlbGYsIG9wdHMuY2hpbGRyZW4pO1xyXG4gICAgXyRlKHRwbCwgZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcclxuICAgICAgICBfJGRlZihzZWxmLCBrZXksIHtcclxuICAgICAgICAgICAgdmFsdWU6IChmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaG9vayA9IGtleVsxXS50b1VwcGVyQ2FzZSgpICsga2V5LnNsaWNlKDIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGJob29rID0gb3B0c1tcImJlZm9yZVwiICsgaG9va107XHJcbiAgICAgICAgICAgICAgICB2YXIgYWhvb2sgPSBvcHRzW1wiYWZ0ZXJcIiArIGhvb2tdO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBiaG9vayAmJiBiaG9vay5jYWxsKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGtleS5zbGljZSgxKSA9PT0gJ3VwZGF0ZScgPyB2YWx1ZS5jYWxsKHRoaXMsIHRoaXMpIDogdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxuICAgICAgICAgICAgICAgICAgICBhaG9vayAmJiBhaG9vay5jYWxsKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfSkoa2V5KVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBfJGRlZihzZWxmLCAnJGRhdGEnLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBfJHRvUGxhaW5PYmoodGhpcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIF8kcGx1Z2luKGZuLCBvcHRpb25zKSB7XHJcbiAgICBfJENvbXBDdHJbJ19wbHVnaW5zJ10gPSBfJENvbXBDdHJbJ19wbHVnaW5zJ10gfHwgW107XHJcbiAgICBfJENvbXBDdHJbJ19wbHVnaW5zJ10ucHVzaCh7IG9wdGlvbnM6IG9wdGlvbnMsIGZuOiBmbiB9KTtcclxufVxyXG5fJGFzc2lnbihfJENvbXBDdHIucHJvdG90eXBlLCB7XHJcbiAgICAkZ2V0OiBmdW5jdGlvbiAocGF0aCkge1xyXG4gICAgICAgIHJldHVybiBfJGFjY2Vzb3IodGhpcywgcGF0aCk7XHJcbiAgICB9LFxyXG4gICAgJHNldDogZnVuY3Rpb24gKHBhdGgsIHZhbHVlKSB7XHJcbiAgICAgICAgXyRhY2Nlc29yKHRoaXMsIHBhdGgsIHZhbHVlKTtcclxuICAgIH0sXHJcbiAgICAkb246IGZ1bmN0aW9uIChldmVudCwgaGFuZGxlcikge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9ldmVudHNbZXZlbnRdKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50c1tldmVudF0gPSBbXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGkgPSB0aGlzLl9ldmVudHNbZXZlbnRdLnB1c2goaGFuZGxlcik7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgJG9mZjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgX3RoaXMuX2V2ZW50c1tldmVudF0uc3BsaWNlKGkgLSAxLCAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgJG9uY2U6IGZ1bmN0aW9uIChldmVudCwgaGFuZGxlcikge1xyXG4gICAgICAgIHZhciBlID0gdGhpcy4kb24oZXZlbnQsIGZ1bmN0aW9uIChhcmdzKSB7XHJcbiAgICAgICAgICAgIGhhbmRsZXIoYXJncyk7XHJcbiAgICAgICAgICAgIGUuJG9mZigpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgICRmaXJlOiBmdW5jdGlvbiAoZXZlbnQsIGRhdGEpIHtcclxuICAgICAgICBpZiAodGhpcy5fZXZlbnRzW2V2ZW50XSkge1xyXG4gICAgICAgICAgICBfJGUodGhpcy5fZXZlbnRzW2V2ZW50XSwgZnVuY3Rpb24gKGhhbmRsZXIpIHsgaGFuZGxlcihkYXRhKTsgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgICRub3RpZnk6IGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICBpZiAodGhpcy5fc3Vic2NyaWJlcnNba2V5XSkge1xyXG4gICAgICAgICAgICBfJGUodGhpcy5fc3Vic2NyaWJlcnNba2V5XSwgZnVuY3Rpb24gKHN1c2NyaWJlcikgeyBzdXNjcmliZXIoKTsgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgICRvYnNlcnZlOiBmdW5jdGlvbiAoZGVwcywgbGlzdGVuZXIpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciBzdWJzID0gW107XHJcbiAgICAgICAgaWYgKF8kaXNBcnJheShkZXBzKSkge1xyXG4gICAgICAgICAgICBfJGUoZGVwcywgZnVuY3Rpb24gKGRlcCkge1xyXG4gICAgICAgICAgICAgICAgc3Vicy5wdXNoKHsgc3ViOiBkZXAsIGk6IF8kc3Vicy5jYWxsKF90aGlzLCBkZXAsIGxpc3RlbmVyKSB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBzdWJzLnB1c2goeyBzdWI6IGRlcHMsIGk6IF8kc3Vicy5jYWxsKHRoaXMsIGRlcHMsIGxpc3RlbmVyKSB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgJHVub2JzZXJ2ZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgXyRlKHN1YnMsIGZ1bmN0aW9uIChzdWIpIHtcclxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5fc3Vic2NyaWJlcnNbc3ViLnN1Yl0uc3BsaWNlKHN1Yi5pLCAxKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICAkd2F0Y2g6IGZ1bmN0aW9uIChrZXksIHdhdGNoZXIpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIGlmICghdGhpcy5fd2F0Y2hlcnNba2V5XSkge1xyXG4gICAgICAgICAgICB0aGlzLl93YXRjaGVyc1trZXldID0gW107XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBpID0gdGhpcy5fd2F0Y2hlcnNba2V5XS5wdXNoKHdhdGNoZXIuYmluZCh0aGlzKSk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgJHVud2F0Y2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIF90aGlzLl93YXRjaGVyc1trZXldLnNwbGljZShpIC0gMSwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59KTtcclxudmFyIGFycmF5ID0gQXJyYXkucHJvdG90eXBlO1xyXG5mdW5jdGlvbiBfJHRvQXJncyhhcmdzLCBzdGFydCkge1xyXG4gICAgaWYgKHN0YXJ0ID09PSB2b2lkIDApIHsgc3RhcnQgPSAwOyB9XHJcbiAgICByZXR1cm4gYXJyYXkuc2xpY2UuY2FsbChhcmdzLCBzdGFydCk7XHJcbn1cclxuZnVuY3Rpb24gXyRhcnJheVZhbHVlcyhsaXN0LCB2YWx1ZSwgcm9vdCwga2V5KSB7XHJcbiAgICBhcnJheS5wdXNoLmFwcGx5KGxpc3QsIHZhbHVlLm1hcChmdW5jdGlvbiAodiwgaSkge1xyXG4gICAgICAgIGlmIChsaXN0Lmxlbmd0aCAhPT0gMClcclxuICAgICAgICAgICAgaSArPSBsaXN0Lmxlbmd0aDtcclxuICAgICAgICByZXR1cm4gIShfJGlzVHlwZSh2LCBfJExpc3QpKSAmJiBfJGlzQXJyYXkodikgPyBuZXcgXyRMaXN0KHYsIHJvb3QsIGtleSArIFwiLlwiICsgaSkgOiB2O1xyXG4gICAgfSkpO1xyXG59XHJcbmZ1bmN0aW9uIF8kTGlzdCh2YWx1ZSwgcm9vdCwga2V5KSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBBcnJheS5hcHBseShzZWxmLCBbdmFsdWUubGVuZ3RoXSk7XHJcbiAgICB2YXIgZGVzYyA9IHsgd3JpdGFibGU6IGZhbHNlLCBjb25maWd1cmFibGU6IGZhbHNlLCBlbnVtZXJhYmxlOiBmYWxzZSB9O1xyXG4gICAgXyRkZWYoc2VsZiwgJ19rZXknLCBfJGFzc2lnbih7IHZhbHVlOiBrZXkgfSwgZGVzYykpO1xyXG4gICAgXyRkZWYoc2VsZiwgJ19yb290JywgXyRhc3NpZ24oeyB2YWx1ZTogcm9vdCB9LCBkZXNjKSk7XHJcbiAgICBfJGFycmF5VmFsdWVzKHNlbGYsIHZhbHVlLCByb290LCBrZXkpO1xyXG4gICAgZGVzYy53cml0YWJsZSA9IHRydWU7XHJcbiAgICBfJGRlZihzZWxmLCAnbGVuZ3RoJywgXyRhc3NpZ24oeyB2YWx1ZTogc2VsZi5sZW5ndGggfSwgZGVzYykpO1xyXG59XHJcbl8kTGlzdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGFycmF5KTtcclxuXyRMaXN0LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IF8kTGlzdDtcclxuWydwb3AnLCAncHVzaCcsICdyZXZlcnNlJywgJ3NoaWZ0JywgJ3NvcnQnLCAnZmlsbCcsICd1bnNoaWZ0JywgJ3NwbGljZSddLmZvckVhY2goZnVuY3Rpb24gKG1ldGhvZCkge1xyXG4gICAgXyRMaXN0LnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICB2YXIgb2xkID0gc2VsZi5zbGljZSgpO1xyXG4gICAgICAgIHZhciByZXN1bHQ7XHJcbiAgICAgICAgaWYgKG1ldGhvZCA9PT0gJ3B1c2gnKSB7XHJcbiAgICAgICAgICAgIF8kYXJyYXlWYWx1ZXMoc2VsZiwgXyR0b0FyZ3MoYXJndW1lbnRzKSwgc2VsZi5fcm9vdCwgc2VsZi5fa2V5KTtcclxuICAgICAgICAgICAgcmVzdWx0ID0gc2VsZi5sZW5ndGg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXN1bHQgPSBhcnJheVttZXRob2RdLmFwcGx5KHNlbGYsIGFyZ3VtZW50cyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIF8kZGlzcGF0Y2goc2VsZi5fcm9vdCwgc2VsZi5fa2V5LCBvbGQsIHNlbGYuc2xpY2UoKSk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH07XHJcbn0pO1xyXG5fJExpc3QucHJvdG90eXBlLnB1bGwgPSBmdW5jdGlvbiAoaW5kZXgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciBpdGVtcyA9IF8kdG9BcmdzKGFyZ3VtZW50cywgMSk7XHJcbiAgICB2YXIgbGVuZ3RoID0gc2VsZi5sZW5ndGg7XHJcbiAgICBpZiAoaW5kZXggPiBsZW5ndGgpIHtcclxuICAgICAgICBsZW5ndGggPSBpbmRleCArIDE7XHJcbiAgICAgICAgdmFyIHB1bGwgPSBuZXcgQXJyYXkoaW5kZXggLSBzZWxmLmxlbmd0aCk7XHJcbiAgICAgICAgcHVsbC5wdXNoLmFwcGx5KHB1bGwsIGl0ZW1zKTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChpID09PSBpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5wdXNoLmFwcGx5KHNlbGYsIHB1bGwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgc2VsZi5zcGxpY2UuYXBwbHkoc2VsZiwgW2luZGV4LCAxXS5jb25jYXQoaXRlbXMpKTtcclxuICAgIH1cclxufTtcclxuZnVuY3Rpb24gXyRkaXNwYXRjaChyb290LCBrZXksIG9sZFZhbCwgdmFsdWUpIHtcclxuICAgIHJvb3QuJG5vdGlmeShrZXkpO1xyXG4gICAgaWYgKHJvb3QuX3dhdGNoZXJzW2tleV0pIHtcclxuICAgICAgICBfJGUocm9vdC5fd2F0Y2hlcnNba2V5XSwgZnVuY3Rpb24gKHdhdGNoZXIpIHsgd2F0Y2hlcihvbGRWYWwsIHZhbHVlKTsgfSk7XHJcbiAgICB9XHJcbiAgICByb290LiR1cGRhdGUoKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyRpc1R5cGUodmFsdWUsIHR5cGUpIHtcclxuICAgIHJldHVybiBfJHR5cGUodHlwZSkgPT09ICdzdHJpbmcnID8gdHlwZS5zcGxpdCgnXFx8Jykuc29tZShmdW5jdGlvbiAodCkgeyByZXR1cm4gdC50cmltKCkgPT09IF8kdHlwZSh2YWx1ZSk7IH0pIDogdmFsdWUgaW5zdGFuY2VvZiB0eXBlO1xyXG59XHJcbmZ1bmN0aW9uIF8kaXNPYmplY3Qob2JqKSB7XHJcbiAgICByZXR1cm4gXyRpc1R5cGUob2JqLCAnb2JqZWN0Jyk7XHJcbn1cclxuZnVuY3Rpb24gXyRpc0FycmF5KG9iaikge1xyXG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkgPyBBcnJheS5pc0FycmF5KG9iaikgOiBfJGlzVHlwZShvYmosICdhcnJheScpO1xyXG59XHJcbmZ1bmN0aW9uIF8kdG9UeXBlKHZhbHVlLCB0eXBlLCByb290LCBrZXkpIHtcclxuICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICAgIGNhc2UgJ2RhdGUnOlxyXG4gICAgICAgICAgICByZXR1cm4gbmV3IERhdGUodmFsdWUpO1xyXG4gICAgICAgIGNhc2UgJ3N0cmluZyc6XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS50b1N0cmluZygpO1xyXG4gICAgICAgIGNhc2UgJ251bWJlcic6XHJcbiAgICAgICAgICAgIHJldHVybiArdmFsdWU7XHJcbiAgICAgICAgY2FzZSAnYm9vbGVhbic6XHJcbiAgICAgICAgICAgIHJldHVybiAhIXZhbHVlO1xyXG4gICAgICAgIGNhc2UgJ2FycmF5JzpcclxuICAgICAgICAgICAgcmV0dXJuIF8kaXNUeXBlKHZhbHVlLCBfJExpc3QpID8gdmFsdWUgOiBuZXcgXyRMaXN0KHZhbHVlLCByb290LCBrZXkpO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBfJHR5cGUob2JqKSB7XHJcbiAgICByZXR1cm4gL1xcW29iamVjdCAoXFx3KylcXF0vLmV4ZWMoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaikpWzFdLnRvTG93ZXJDYXNlKCk7XHJcbn1cclxuZnVuY3Rpb24gXyRoYXNQcm9wKG9iaiwgcHJvcCkge1xyXG4gICAgcmV0dXJuIG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKTtcclxufVxyXG5mdW5jdGlvbiBfJGRydChkaXJlY3RpdmUpIHtcclxuICAgIHZhciBoYXNQcm9wID0gZnVuY3Rpb24gKHByb3AsIGluc3RhbmNlLCBvcHRpb25zLCBlbGVtZW50KSB7IHJldHVybiBfJGlzT2JqZWN0KGRpcmVjdGl2ZSkgJiYgZGlyZWN0aXZlW3Byb3BdICYmIGRpcmVjdGl2ZVtwcm9wXShpbnN0YW5jZSwgb3B0aW9ucywgZWxlbWVudCk7IH07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgICRpbml0OiBmdW5jdGlvbiAoaW5zdGFuY2UsIG9wdGlvbnMsIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgaGFzUHJvcCgnJGluaXQnLCBpbnN0YW5jZSwgb3B0aW9ucywgZWxlbWVudCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAkaW5zZXJ0ZWQ6IGZ1bmN0aW9uIChpbnN0YW5jZSwgb3B0aW9ucywgZWxlbWVudCkge1xyXG4gICAgICAgICAgICBoYXNQcm9wKCckaW5zZXJ0ZWQnLCBpbnN0YW5jZSwgb3B0aW9ucywgZWxlbWVudCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAkdXBkYXRlOiBmdW5jdGlvbiAoaW5zdGFuY2UsIG9wdGlvbnMsIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgaWYgKF8kaXNUeXBlKGRpcmVjdGl2ZSwgJ2Z1bmN0aW9uJykpIHtcclxuICAgICAgICAgICAgICAgIGRpcmVjdGl2ZShpbnN0YW5jZSwgb3B0aW9ucywgZWxlbWVudCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBoYXNQcm9wKCckdXBkYXRlJywgaW5zdGFuY2UsIG9wdGlvbnMsIGVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICAkZGVzdHJveTogZnVuY3Rpb24gKGluc3RhbmNlLCBvcHRpb25zLCBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGhhc1Byb3AoJyRkZXN0cm95JywgaW5zdGFuY2UsIG9wdGlvbnMsIGVsZW1lbnQpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIF8kbm9vcCgpIHsgfVxyXG5leHBvcnQgZnVuY3Rpb24gXyRhZGQoaW5zdCwgY2hpbGQpIHtcclxuICAgIGluc3QuJGNoaWxkcmVuLnB1c2goY2hpbGQpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJHJlbW92ZShpbnN0LCBjaGlsZCkge1xyXG4gICAgdmFyIGluZGV4ID0gaW5zdC4kY2hpbGRyZW4uaW5kZXhPZihjaGlsZCk7XHJcbiAgICBpbmRleCA+PSAwICYmIGluc3QuJGNoaWxkcmVuLnNwbGljZShpbmRleCwgMSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIF8kdG9TdHIob2JqKSB7XHJcbiAgICB2YXIgc3RyID0gXyR0eXBlKG9iaik7XHJcbiAgICByZXR1cm4gIS9udWxsfHVuZGVmaW5lZC8udGVzdChzdHIpID8gb2JqLnRvU3RyaW5nKCkgOiBzdHI7XHJcbn1cclxuZnVuY3Rpb24gXyR0b1BsYWluT2JqKG9iaikge1xyXG4gICAgdmFyIGRhdGEgPSB7fTtcclxuICAgIF8kZShfJGlzT2JqZWN0KG9iaikgPyBvYmogOiB7fSwgZnVuY3Rpb24gKF92LCBrKSB7XHJcbiAgICAgICAgaWYgKGtbMF0gIT09ICckJyAmJiAhXyRpc1R5cGUob2JqW2tdLCAnZnVuY3Rpb24nKSkge1xyXG4gICAgICAgICAgICBpZiAoXyRpc1R5cGUob2JqW2tdLCBfJExpc3QpKSB7XHJcbiAgICAgICAgICAgICAgICBkYXRhW2tdID0gb2JqW2tdLm1hcChfJHRvUGxhaW5PYmopO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKF8kaXNPYmplY3Qob2JqW2tdKSkge1xyXG4gICAgICAgICAgICAgICAgZGF0YVtrXSA9IF8kdG9QbGFpbk9iaihvYmpba10pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZGF0YVtrXSA9IG9ialtrXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIF8kaXNPYmplY3Qob2JqKSA/IGRhdGEgOiBvYmo7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIF8kc2V0UmVmKG9iaiwgcHJvcCkge1xyXG4gICAgdmFyIHZhbHVlID0gW107XHJcbiAgICBfJGRlZihvYmosIHByb3AsIHtcclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmxlbmd0aCA8PSAxID8gdmFsdWVbMF0gOiB2YWx1ZTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbCkge1xyXG4gICAgICAgICAgICBpZiAodmFsICYmICF+dmFsdWUuaW5kZXhPZih2YWwpKSB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZS5wdXNoKHZhbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBfJGFjY2Vzb3Iob2JqZWN0LCBwYXRoLCB2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHBhdGguc3BsaXQoJy4nKS5yZWR1Y2UoZnVuY3Rpb24gKG9iaiwga2V5LCBpLCBhcnIpIHtcclxuICAgICAgICBpZiAoXyRpc1R5cGUodmFsdWUsICd1bmRlZmluZWQnKSkge1xyXG4gICAgICAgICAgICBpZiAob2JqID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIGFyci5zcGxpY2UoMCwgYXJyLmxlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaSA+IDAgJiYgb2JqID09PSBudWxsID8gb2JqIDogdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoaSA9PT0gYXJyLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICAgICAgICAgIGlmIChfJGlzVHlwZShvYmosIF8kTGlzdCkgJiYgKCtrZXkpLnRvU3RyaW5nKCkgPT09IGtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG9iai5wdWxsKCtrZXksIHZhbHVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBvbGRWYWwgPSBvYmpba2V5XTtcclxuICAgICAgICAgICAgICAgICAgICBvYmpba2V5XSA9ICFfJGlzVHlwZSh2YWx1ZSwgXyRMaXN0KSAmJiBfJGlzQXJyYXkodmFsdWUpID8gbmV3IF8kTGlzdCh2YWx1ZSwgb2JqZWN0LCBrZXkpIDogdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgXyRkaXNwYXRjaChvYmplY3QsIHBhdGgsIG9sZFZhbCwgb2JqW2tleV0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKCFfJGlzT2JqZWN0KG9ialtrZXldKSkge1xyXG4gICAgICAgICAgICAgICAgb2JqW2tleV0gPSB7fTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb2JqID8gb2JqW2tleV0gOiBudWxsO1xyXG4gICAgfSwgb2JqZWN0KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyRlbXB0eUVsc2UoKSB7XHJcbiAgICByZXR1cm4geyB0eXBlOiAnZW1wdHktZWxzZScsICRjcmVhdGU6IF8kbm9vcCwgJG1vdW50OiBfJG5vb3AsICR1cGRhdGU6IF8kbm9vcCwgJGRlc3Ryb3k6IF8kbm9vcCB9O1xyXG59XHJcbmZ1bmN0aW9uIF8kc3VicyhkZXAsIGxpc3RlbmVyKSB7XHJcbiAgICBpZiAoIXRoaXMuX3N1YnNjcmliZXJzW2RlcF0pIHtcclxuICAgICAgICB0aGlzLl9zdWJzY3JpYmVyc1tkZXBdID0gW107XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5fc3Vic2NyaWJlcnNbZGVwXS5wdXNoKGxpc3RlbmVyLmJpbmQodGhpcykpIC0gMTtcclxufVxyXG5mdW5jdGlvbiBfJGRlZihvYmosIGtleSwgZGVzYykge1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCBkZXNjKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyRpc0tleShldmVudCwga2V5KSB7XHJcbiAgICByZXR1cm4gZXZlbnQua2V5LnRvTG93ZXJDYXNlKCkgPT09IGtleSB8fCAhIWV2ZW50W2tleSArIFwiS2V5XCJdO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJGJpbmRHcm91cChpbnB1dCwgc2VsZWN0aW9uKSB7XHJcbiAgICB2YXIgXyRpbmRleCA9IHNlbGVjdGlvbi5pbmRleE9mKGlucHV0LnZhbHVlKTtcclxuICAgIGlmIChpbnB1dC5jaGVja2VkICYmICF+XyRpbmRleClcclxuICAgICAgICBzZWxlY3Rpb24ucHVzaChpbnB1dC52YWx1ZSk7XHJcbiAgICBlbHNlXHJcbiAgICAgICAgc2VsZWN0aW9uLnNwbGljZShfJGluZGV4LCAxKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyQoc2VsZWN0b3IsIHBhcmVudCkge1xyXG4gICAgcmV0dXJuIF8kaXNUeXBlKHNlbGVjdG9yLCAnc3RyaW5nJykgPyAocGFyZW50IHx8IGRvY3VtZW50KS5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSA6IHNlbGVjdG9yO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJGQoKSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJGEocGFyZW50LCBjaGlsZCwgc2libGluZykge1xyXG4gICAgaWYgKF8kaXNUeXBlKHNpYmxpbmcsICdib29sZWFuJykgJiYgc2libGluZylcclxuICAgICAgICBwYXJlbnQucGFyZW50RWxlbWVudC5yZXBsYWNlQ2hpbGQoY2hpbGQsIHBhcmVudCk7XHJcbiAgICBlbHNlIGlmICghc2libGluZylcclxuICAgICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoY2hpbGQpO1xyXG4gICAgZWxzZVxyXG4gICAgICAgIHBhcmVudC5pbnNlcnRCZWZvcmUoY2hpbGQsIHNpYmxpbmcpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJGFzKHNvdXJjZSwgZGVzdCkge1xyXG4gICAgdmFyIGNoaWxkTm9kZXMgPSBzb3VyY2UuY2hpbGROb2RlcztcclxuICAgIHZhciBhdHRyaWJ1dGVzID0gc291cmNlLmF0dHJpYnV0ZXM7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBfJGEoZGVzdCwgY2hpbGROb2Rlc1tpXSk7XHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJpYnV0ZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICB2YXIgYXR0ciA9IGF0dHJpYnV0ZXNbaV07XHJcbiAgICAgICAgZGVzdC5zZXRBdHRyaWJ1dGVOUyhzb3VyY2UubmFtZXNwYWNlVVJJLCBhdHRyLm5hbWUsIGF0dHIudmFsdWUpO1xyXG4gICAgfVxyXG4gICAgc291cmNlLnBhcmVudEVsZW1lbnQucmVwbGFjZUNoaWxkKGRlc3QsIHNvdXJjZSk7XHJcbiAgICByZXR1cm4gZGVzdDtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyRyKGVsLCBwYXJlbnQpIHtcclxuICAgIHZhciByb290ID0gcGFyZW50IHx8IGVsLnBhcmVudEVsZW1lbnQ7XHJcbiAgICBpZiAocm9vdClcclxuICAgICAgICByb290LnJlbW92ZUNoaWxkKGVsKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyRjZSh0YWdOYW1lKSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lIHx8ICdkaXYnKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyRjc2UodGFnTmFtZSkge1xyXG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCB0YWdOYW1lIHx8ICdzdmcnKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyRjdChjb250ZW50KSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY29udGVudCB8fCAnJyk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIF8kY20oY29udGVudCkge1xyXG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoY29udGVudCB8fCAnJyk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIF8kc2EoZWwsIGF0dHIsIHZhbHVlKSB7XHJcbiAgICBlbC5zZXRBdHRyaWJ1dGUoYXR0ciwgdmFsdWUpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJGdhKGVsLCBhdHRyKSB7XHJcbiAgICByZXR1cm4gZWwuZ2V0QXR0cmlidXRlKGF0dHIpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJGFsKGVsLCBldmVudCwgaGFuZGxlcikge1xyXG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgZmFsc2UpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJHVsKGVsLCBldmVudCwgb2xkSGFuZGxlciwgbmV3SGFuZGxlcikge1xyXG4gICAgXyRybChlbCwgZXZlbnQsIG9sZEhhbmRsZXIpO1xyXG4gICAgXyRhbChlbCwgZXZlbnQsIG9sZEhhbmRsZXIgPSBuZXdIYW5kbGVyKTtcclxuICAgIHJldHVybiBvbGRIYW5kbGVyO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJHJsKGVsLCBldmVudCwgaGFuZGxlcikge1xyXG4gICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgZmFsc2UpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJGJjKHZhbHVlKSB7XHJcbiAgICB2YXIgY2xhc3NlcyA9ICcnO1xyXG4gICAgaWYgKF8kaXNUeXBlKHZhbHVlLCAnc3RyaW5nJykpIHtcclxuICAgICAgICBjbGFzc2VzICs9IFwiIFwiICsgdmFsdWU7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChfJGlzQXJyYXkodmFsdWUpKSB7XHJcbiAgICAgICAgY2xhc3NlcyA9IHZhbHVlLm1hcChfJGJjKS5qb2luKCcgJyk7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChfJGlzT2JqZWN0KHZhbHVlKSkge1xyXG4gICAgICAgIGZvciAodmFyIGtleSBpbiB2YWx1ZSlcclxuICAgICAgICAgICAgaWYgKF8kaGFzUHJvcCh2YWx1ZSwga2V5KSAmJiB2YWx1ZVtrZXldKVxyXG4gICAgICAgICAgICAgICAgY2xhc3NlcyArPSBcIiBcIiArIGtleTtcclxuICAgIH1cclxuICAgIHJldHVybiBjbGFzc2VzLnRyaW0oKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyRicyh2YWx1ZSkge1xyXG4gICAgdmFyIGVsID0gXyRjZSgpO1xyXG4gICAgaWYgKF8kaXNPYmplY3QodmFsdWUpKSB7XHJcbiAgICAgICAgdmFyIHN0eWxlXzEgPSBlbC5zdHlsZTtcclxuICAgICAgICBfJGUodmFsdWUsIGZ1bmN0aW9uICh2YWwsIHByb3ApIHtcclxuICAgICAgICAgICAgaWYgKHZhbCAhPT0gc3R5bGVfMVtwcm9wXSkge1xyXG4gICAgICAgICAgICAgICAgc3R5bGVfMVtwcm9wXSA9IHZhbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBzdHlsZV8xLmNzc1RleHQ7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChfJGlzVHlwZSh2YWx1ZSwgJ3N0cmluZycpKSB7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBfJGYocm9vdCwgb2JqLCBsb29wKSB7XHJcbiAgICB2YXIgaXRlbXMgPSB7fSwgbG9vcFBhcmVudCwgbG9vcFNpYmxpbmc7XHJcbiAgICB2YXIgZ2xvYnMgPSBfJHRvQXJncyhhcmd1bWVudHMsIDMpO1xyXG4gICAgXyRlKG9iaiwgZnVuY3Rpb24gKGl0ZW0sIGkpIHsgaXRlbXNbaV0gPSBsb29wLmFwcGx5KG51bGwsIFtyb290LCBpdGVtLCBpXS5jb25jYXQoZ2xvYnMpKTsgfSk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgICRjcmVhdGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgXyRlKGl0ZW1zLCBmdW5jdGlvbiAoaXRlbSkgeyBpdGVtLiRjcmVhdGUoKTsgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAkbW91bnQ6IGZ1bmN0aW9uIChwYXJlbnQsIHNpYmxpbmcpIHtcclxuICAgICAgICAgICAgbG9vcFBhcmVudCA9IF8kKHBhcmVudCk7XHJcbiAgICAgICAgICAgIGxvb3BTaWJsaW5nID0gXyQoc2libGluZyk7XHJcbiAgICAgICAgICAgIF8kZShpdGVtcywgZnVuY3Rpb24gKGl0ZW0pIHsgaXRlbS4kbW91bnQobG9vcFBhcmVudCwgbG9vcFNpYmxpbmcpOyB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgICR1cGRhdGU6IGZ1bmN0aW9uIChyb290LCBvYmopIHtcclxuICAgICAgICAgICAgdmFyIGdsb2JzID0gXyR0b0FyZ3MoYXJndW1lbnRzLCAyKTtcclxuICAgICAgICAgICAgXyRlKGl0ZW1zLCBmdW5jdGlvbiAoaXRlbSwgaSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKG9ialtpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uJHVwZGF0ZS5hcHBseShpdGVtLCBbcm9vdCwgb2JqW2ldLCBpXS5jb25jYXQoZ2xvYnMpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uJGRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgICAgICBkZWxldGUgaXRlbXNbaV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBfJGUob2JqLCBmdW5jdGlvbiAoaXRlbSwgaSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFpdGVtc1tpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zW2ldID0gbG9vcC5hcHBseShudWxsLCBbcm9vdCwgaXRlbSwgaV0uY29uY2F0KGdsb2JzKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbXNbaV0uJGNyZWF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zW2ldLiRtb3VudChsb29wUGFyZW50LCBsb29wU2libGluZyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgJGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgXyRlKGl0ZW1zLCBmdW5jdGlvbiAoaXRlbSkgeyBpdGVtLiRkZXN0cm95KCk7IH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIF8kZShvYmosIGNiKSB7XHJcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XHJcbiAgICAgICAgaWYgKF8kaGFzUHJvcChvYmosIGtleSkpIHtcclxuICAgICAgICAgICAgY2Iob2JqW2tleV0sIChpc05hTigra2V5KSA/IGtleSA6ICtrZXkpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIF8kaXMoaWQsIGNzcykge1xyXG4gICAgdmFyIGlzTmV3ID0gZmFsc2U7XHJcbiAgICB2YXIgc3R5bGUgPSBfJChcIiNcIiArIGlkLCBkb2N1bWVudC5oZWFkKTtcclxuICAgIGlmICghc3R5bGUpIHtcclxuICAgICAgICBpc05ldyA9IHRydWU7XHJcbiAgICAgICAgc3R5bGUgPSBfJGNlKCdzdHlsZScpO1xyXG4gICAgICAgIHN0eWxlLmlkID0gaWQ7XHJcbiAgICAgICAgXyRzYShzdHlsZSwgJ3JlZnMnLCAnMScpO1xyXG4gICAgfVxyXG4gICAgaWYgKHN0eWxlLnRleHRDb250ZW50ICE9PSBjc3MpIHtcclxuICAgICAgICBzdHlsZS50ZXh0Q29udGVudCA9IGNzcztcclxuICAgIH1cclxuICAgIGlmIChpc05ldykge1xyXG4gICAgICAgIF8kYShkb2N1bWVudC5oZWFkLCBzdHlsZSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB2YXIgY291bnQgPSArXyRnYShzdHlsZSwgJ3JlZnMnKTtcclxuICAgICAgICBfJHNhKHN0eWxlLCAncmVmcycsICgrK2NvdW50KS50b1N0cmluZygpKTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gXyRkcyhpZCkge1xyXG4gICAgdmFyIHN0eWxlID0gXyQoXCIjXCIgKyBpZCwgZG9jdW1lbnQuaGVhZCk7XHJcbiAgICBpZiAoc3R5bGUpIHtcclxuICAgICAgICB2YXIgY291bnQgPSArXyRnYShzdHlsZSwgJ3JlZnMnKTtcclxuICAgICAgICBpZiAoLS1jb3VudCA9PT0gMCkge1xyXG4gICAgICAgICAgICBfJHIoc3R5bGUsIGRvY3VtZW50LmhlYWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgXyRzYShzdHlsZSwgJ3JlZnMnLCBjb3VudC50b1N0cmluZygpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwidmFyIEhBTEYgPSAuNTtcclxudmFyIFBJID0gTWF0aC5QSSwgcG93ID0gTWF0aC5wb3csIHNpbiA9IE1hdGguc2luO1xyXG52YXIgTkVXVE9OX0lURVJBVElPTlMgPSA0O1xyXG52YXIgTkVXVE9OX01JTl9TTE9QRSA9IDAuMDAxO1xyXG52YXIgU1VCRElWSVNJT05fUFJFQ0lTSU9OID0gMC4wMDAwMDAxO1xyXG52YXIgU1VCRElWSVNJT05fTUFYX0lURVJBVElPTlMgPSAxMDtcclxudmFyIGtTcGxpbmVUYWJsZVNpemUgPSAxMTtcclxudmFyIGtTYW1wbGVTdGVwU2l6ZSA9IDEgLyAoa1NwbGluZVRhYmxlU2l6ZSAtIDEpO1xyXG52YXIgZmxvYXQzMkFycmF5U3VwcG9ydGVkID0gdHlwZW9mIEZsb2F0MzJBcnJheSA9PT0gJ2Z1bmN0aW9uJztcclxuZnVuY3Rpb24gQyhhQTEpIHsgcmV0dXJuIDMgKiBhQTE7IH1cclxuZnVuY3Rpb24gbm93KCkgeyByZXR1cm4gcGVyZm9ybWFuY2Uubm93KCk7IH1cclxuZnVuY3Rpb24gQihhQTEsIGFBMikgeyByZXR1cm4gQyhhQTIpIC0gNiAqIGFBMTsgfVxyXG5mdW5jdGlvbiBBKGFBMSwgYUEyKSB7IHJldHVybiAxIC0gQyhhQTIpICsgQyhhQTEpOyB9XHJcbmZ1bmN0aW9uIGNhbGNCZXppZXIoYVQsIGFBMSwgYUEyKSB7XHJcbiAgICByZXR1cm4gKChBKGFBMSwgYUEyKSAqIGFUICsgQihhQTEsIGFBMikpICogYVQgKyBDKGFBMSkpICogYVQ7XHJcbn1cclxuZnVuY3Rpb24gZ2V0U2xvcGUoYVQsIGFBMSwgYUEyKSB7XHJcbiAgICByZXR1cm4gQyhBKGFBMSwgYUEyKSAqIGFUICogYVQgKyAyICogQihhQTEsIGFBMikgKiBhVCArIEMoYUExKSk7XHJcbn1cclxuZnVuY3Rpb24gYmluYXJ5U3ViZGl2aWRlKGFYLCBhQSwgYUIsIG1YMSwgbVgyKSB7XHJcbiAgICB2YXIgY3VycmVudFgsIGN1cnJlbnRULCBpID0gMDtcclxuICAgIGRvIHtcclxuICAgICAgICBjdXJyZW50VCA9IGFBICsgKGFCIC0gYUEpIC8gMjtcclxuICAgICAgICBjdXJyZW50WCA9IGNhbGNCZXppZXIoY3VycmVudFQsIG1YMSwgbVgyKSAtIGFYO1xyXG4gICAgICAgIGlmIChjdXJyZW50WCA+IDApIHtcclxuICAgICAgICAgICAgYUIgPSBjdXJyZW50VDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGFBID0gY3VycmVudFQ7XHJcbiAgICAgICAgfVxyXG4gICAgfSB3aGlsZSAoTWF0aC5hYnMoY3VycmVudFgpID4gU1VCRElWSVNJT05fUFJFQ0lTSU9OICYmICsraSA8IFNVQkRJVklTSU9OX01BWF9JVEVSQVRJT05TKTtcclxuICAgIHJldHVybiBjdXJyZW50VDtcclxufVxyXG5mdW5jdGlvbiBuZXd0b25SYXBoc29uSXRlcmF0ZShhWCwgYUd1ZXNzVCwgbVgxLCBtWDIpIHtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgTkVXVE9OX0lURVJBVElPTlM7ICsraSkge1xyXG4gICAgICAgIHZhciBjdXJyZW50U2xvcGUgPSBnZXRTbG9wZShhR3Vlc3NULCBtWDEsIG1YMik7XHJcbiAgICAgICAgaWYgKGN1cnJlbnRTbG9wZSA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gYUd1ZXNzVDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGN1cnJlbnRYID0gY2FsY0JlemllcihhR3Vlc3NULCBtWDEsIG1YMikgLSBhWDtcclxuICAgICAgICBhR3Vlc3NUIC09IGN1cnJlbnRYIC8gY3VycmVudFNsb3BlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFHdWVzc1Q7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGN1YmljQmV6aWVyKG1YMSwgbVkxLCBtWDIsIG1ZMikge1xyXG4gICAgaWYgKCEoMCA8PSBtWDEgJiYgbVgxIDw9IDEgJiYgMCA8PSBtWDIgJiYgbVgyIDw9IDEpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdiZXppZXIgeCB2YWx1ZXMgbXVzdCBiZSBpbiBbMCwgMV0gcmFuZ2UnKTtcclxuICAgIH1cclxuICAgIGlmIChtWDEgPT09IG1ZMSAmJiBtWDIgPT09IG1ZMikge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoeCkgeyByZXR1cm4geDsgfTtcclxuICAgIH1cclxuICAgIHZhciBzYW1wbGVWYWx1ZXMgPSBmbG9hdDMyQXJyYXlTdXBwb3J0ZWQgPyBuZXcgRmxvYXQzMkFycmF5KGtTcGxpbmVUYWJsZVNpemUpIDogbmV3IEFycmF5KGtTcGxpbmVUYWJsZVNpemUpO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrU3BsaW5lVGFibGVTaXplOyArK2kpIHtcclxuICAgICAgICBzYW1wbGVWYWx1ZXNbaV0gPSBjYWxjQmV6aWVyKGkgKiBrU2FtcGxlU3RlcFNpemUsIG1YMSwgbVgyKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGdldFRGb3JYKGFYKSB7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRTYW1wbGUgPSAxO1xyXG4gICAgICAgIHZhciBpbnRlcnZhbFN0YXJ0ID0gMDtcclxuICAgICAgICB2YXIgbGFzdFNhbXBsZSA9IGtTcGxpbmVUYWJsZVNpemUgLSAxO1xyXG4gICAgICAgIGZvciAoOyBjdXJyZW50U2FtcGxlICE9PSBsYXN0U2FtcGxlICYmIHNhbXBsZVZhbHVlc1tjdXJyZW50U2FtcGxlXSA8PSBhWDsgKytjdXJyZW50U2FtcGxlKSB7XHJcbiAgICAgICAgICAgIGludGVydmFsU3RhcnQgKz0ga1NhbXBsZVN0ZXBTaXplO1xyXG4gICAgICAgIH1cclxuICAgICAgICAtLWN1cnJlbnRTYW1wbGU7XHJcbiAgICAgICAgdmFyIGRpc3QgPSAoYVggLSBzYW1wbGVWYWx1ZXNbY3VycmVudFNhbXBsZV0pIC8gKHNhbXBsZVZhbHVlc1tjdXJyZW50U2FtcGxlICsgMV0gLSBzYW1wbGVWYWx1ZXNbY3VycmVudFNhbXBsZV0pO1xyXG4gICAgICAgIHZhciBndWVzc0ZvclQgPSBpbnRlcnZhbFN0YXJ0ICsgZGlzdCAqIGtTYW1wbGVTdGVwU2l6ZTtcclxuICAgICAgICB2YXIgaW5pdGlhbFNsb3BlID0gZ2V0U2xvcGUoZ3Vlc3NGb3JULCBtWDEsIG1YMik7XHJcbiAgICAgICAgaWYgKGluaXRpYWxTbG9wZSA+PSBORVdUT05fTUlOX1NMT1BFKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXd0b25SYXBoc29uSXRlcmF0ZShhWCwgZ3Vlc3NGb3JULCBtWDEsIG1YMik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGluaXRpYWxTbG9wZSA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gZ3Vlc3NGb3JUO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGJpbmFyeVN1YmRpdmlkZShhWCwgaW50ZXJ2YWxTdGFydCwgaW50ZXJ2YWxTdGFydCArIGtTYW1wbGVTdGVwU2l6ZSwgbVgxLCBtWDIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBmdW5jdGlvbiAoeCkge1xyXG4gICAgICAgIGlmICh4ID09PSAwKVxyXG4gICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICBpZiAoeCA9PT0gMSlcclxuICAgICAgICAgICAgcmV0dXJuIDE7XHJcbiAgICAgICAgcmV0dXJuIGNhbGNCZXppZXIoZ2V0VEZvclgoeCksIG1ZMSwgbVkyKTtcclxuICAgIH07XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGJvdW5jZU91dCh0KSB7XHJcbiAgICB2YXIgYyA9IC45LCBhID0gNCAvIDExLCBiID0gOCAvIDExO1xyXG4gICAgdmFyIGNhID0gNDM1NiAvIDM2MSwgY2IgPSAzNTQ0MiAvIDE4MDUsIGNjID0gMTYwNjEgLyAxODA1LCB0MiA9IHQgKiB0O1xyXG4gICAgcmV0dXJuIHQgPCBhID8gNy41NjI1ICogdDIgOiB0IDwgYiA/IDkuMDc1ICogdDIgLSA5LjkgKiB0ICsgMy40IDogdCA8IGMgPyBjYSAqIHQyIC0gY2IgKiB0ICsgY2MgOiAxMC44ICogdCAqIHQgLSAyMC41MiAqIHQgKyAxMC43MjtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gYm91bmNlSW5PdXQodCkge1xyXG4gICAgcmV0dXJuIHQgPCBIQUxGID8gSEFMRiAqICgxIC0gYm91bmNlT3V0KDEgLSB0ICogMikpIDogSEFMRiAqIGJvdW5jZU91dCh0ICogMiAtIDEpICsgSEFMRjtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gYm91bmNlSW4odCkge1xyXG4gICAgcmV0dXJuIDEgLSBib3VuY2VPdXQoMSAtIHQpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBlbGFzdGljSW5PdXQodCkge1xyXG4gICAgcmV0dXJuIHQgPCBIQUxGXHJcbiAgICAgICAgPyBIQUxGICogc2luKDEzICogUEkgLyAyICogMiAqIHQpICogcG93KDIsIDEwICogKDIgKiB0IC0gMSkpXHJcbiAgICAgICAgOiBIQUxGICogc2luKC0xMyAqIFBJIC8gMiAqICgoMiAqIHQgLSAxKSArIDEpKSAqIHBvdygyLCAtMTAgKiAoMiAqIHQgLSAxKSkgKyAxO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBlbGFzdGljSW4odCkge1xyXG4gICAgcmV0dXJuIHNpbigxMyAqIHQgKiBQSSAvIDIpICogcG93KDIsIDEwICogKHQgLSAxKSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGVsYXN0aWNPdXQodCkge1xyXG4gICAgcmV0dXJuIHNpbigtMTMgKiAodCArIDEpICogUEkgLyAyKSAqIHBvdygyLCAtMTAgKiB0KSArIDE7XHJcbn1cclxuZXhwb3J0IHZhciBzbmFwID0gY3ViaWNCZXppZXIoMCwgMSwgSEFMRiwgMSk7XHJcbmV4cG9ydCB2YXIgZWFzZUluID0gY3ViaWNCZXppZXIoLjQyLCAwLCAxLCAxKTtcclxuZXhwb3J0IHZhciBlYXNlT3V0ID0gY3ViaWNCZXppZXIoMCwgMCwgLjU4LCAxKTtcclxuZXhwb3J0IHZhciBpbk91dCA9IGN1YmljQmV6aWVyKC40MiwgMCwgLjU4LCAxKTtcclxuZXhwb3J0IHZhciBsaW5lYXIgPSBjdWJpY0JlemllciguMjUsIC4yNSwgLjc1LCAuNzUpO1xyXG5leHBvcnQgdmFyIGJhY2tJbiA9IGN1YmljQmV6aWVyKC42LCAtLjI4LCAuNzM1LCAuMDQ1KTtcclxuZXhwb3J0IHZhciBjaXJjSW4gPSBjdWJpY0JlemllciguNiwgLjA0LCAuOTgsIC4zMzUpO1xyXG5leHBvcnQgdmFyIGN1YmljSW4gPSBjdWJpY0JlemllciguNTUsIC4wNTUsIC42NzUsIC4xOSk7XHJcbmV4cG9ydCB2YXIgZXhwb0luID0gY3ViaWNCZXppZXIoLjk1LCAuMDUsIC43OTUsIC4wMzUpO1xyXG5leHBvcnQgdmFyIHF1YWRJbiA9IGN1YmljQmV6aWVyKC41NSwgLjA4NSwgLjY4LCAuNTMpO1xyXG5leHBvcnQgdmFyIHF1YXJ0SW4gPSBjdWJpY0JlemllciguODk1LCAuMDMsIC42ODUsIC4yMik7XHJcbmV4cG9ydCB2YXIgcXVpbnRJbiA9IGN1YmljQmV6aWVyKC43NTUsIC4wNSwgLjg1NSwgLjA2KTtcclxuZXhwb3J0IHZhciBzaW5lSW4gPSBjdWJpY0JlemllciguNDcsIDAsIC43NDUsIC43MTUpO1xyXG5leHBvcnQgdmFyIGJhY2tPdXQgPSBjdWJpY0JlemllciguMTc1LCAuODg1LCAuMzIsIDEuMjc1KTtcclxuZXhwb3J0IHZhciBjaXJjT3V0ID0gY3ViaWNCZXppZXIoLjA3NSwgLjgyLCAuMTY1LCAxKTtcclxuZXhwb3J0IHZhciBjdWJpY091dCA9IGN1YmljQmV6aWVyKC4yMTUsIC42MSwgLjM1NSwgMSk7XHJcbmV4cG9ydCB2YXIgZXhwb091dCA9IGN1YmljQmV6aWVyKC4xOSwgMSwgLjIyLCAxKTtcclxuZXhwb3J0IHZhciBxdWFkT3V0ID0gY3ViaWNCZXppZXIoLjI1LCAuNDYsIC40NSwgLjk0KTtcclxuZXhwb3J0IHZhciBxdWFydE91dCA9IGN1YmljQmV6aWVyKC4xNjUsIC44NCwgLjQ0LCAxKTtcclxuZXhwb3J0IHZhciBxdWludE91dCA9IGN1YmljQmV6aWVyKC4yMywgMSwgLjMyLCAxKTtcclxuZXhwb3J0IHZhciBzaW5lT3V0ID0gY3ViaWNCZXppZXIoLjM5LCAuNTc1LCAuNTY1LCAxKTtcclxuZXhwb3J0IHZhciBiYWNrSW5PdXQgPSBjdWJpY0JlemllciguNjgsIC0uNTUsIC4yNjUsIDEuNTUpO1xyXG5leHBvcnQgdmFyIGNpcmNJbk91dCA9IGN1YmljQmV6aWVyKC43ODUsIC4xMzUsIC4xNSwgLjg2KTtcclxuZXhwb3J0IHZhciBjdWJpY0luT3V0ID0gY3ViaWNCZXppZXIoLjY0NSwgLjA0NSwgLjM1NSwgMSk7XHJcbmV4cG9ydCB2YXIgZXhwb0luT3V0ID0gY3ViaWNCZXppZXIoMSwgMCwgMCwgMSk7XHJcbmV4cG9ydCB2YXIgcXVhZEluT3V0ID0gY3ViaWNCZXppZXIoLjQ1NSwgLjAzLCAuNTE1LCAuOTU1KTtcclxuZXhwb3J0IHZhciBxdWFydEluT3V0ID0gY3ViaWNCZXppZXIoLjc3LCAwLCAuMTc1LCAxKTtcclxuZXhwb3J0IHZhciBxdWludEluT3V0ID0gY3ViaWNCZXppZXIoLjg2LCAwLCAuMDcsIDEpO1xyXG5leHBvcnQgdmFyIHNpbmVJbk91dCA9IGN1YmljQmV6aWVyKC40NDUsIC4wNSwgLjU1LCAuOTUpO1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2l0aW9uKF9hKSB7XHJcbiAgICB2YXIgX2IgPSBfYS5lYXNlLCBlYXNlID0gX2IgPT09IHZvaWQgMCA/IGVhc2VJbiA6IF9iLCBkdXJhdGlvbiA9IF9hLmR1cmF0aW9uLCBfYyA9IF9hLmxvb3AsIGxvb3AgPSBfYyA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYywgX2QgPSBfYS5kZWxheSwgZGVsYXkgPSBfZCA9PT0gdm9pZCAwID8gMCA6IF9kO1xyXG4gICAgdmFyIGRpZmYgPSAwO1xyXG4gICAgdmFyIHN0YXJ0LCBjaGFuZ2UsIGVuZGVkO1xyXG4gICAgZnVuY3Rpb24gaW5pdCgpIHtcclxuICAgICAgICBzdGFydCA9IG5vdygpO1xyXG4gICAgICAgICF0aGlzLnJ1bm5pbmcgJiYgKHRoaXMucnVubmluZyA9IHRydWUpO1xyXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gYW5pbWF0ZSh0aW1lKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucGF1c2VkIHx8ICFjaGFuZ2UpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB2YXIgZnJhY3Rpb24gPSAodGltZSAtIHN0YXJ0ICsgZGlmZikgLyAoZHVyYXRpb24gfHwgODAwKTtcclxuICAgICAgICB2YXIgcHJvZ3Jlc3MgPSBlYXNlKGZyYWN0aW9uID4gMSA/IGZyYWN0aW9uID0gMSA6IGZyYWN0aW9uKTtcclxuICAgICAgICBjaGFuZ2UocHJvZ3Jlc3MpO1xyXG4gICAgICAgIGlmIChmcmFjdGlvbiA8IDEpIHtcclxuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUuYmluZCh0aGlzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGxvb3ApIHtcclxuICAgICAgICAgICAgZGlmZiA9IDA7XHJcbiAgICAgICAgICAgIGluaXQuY2FsbCh0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucnVubmluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICBlbmRlZCAmJiBlbmRlZCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcGF1c2VkOiBmYWxzZSxcclxuICAgICAgICBydW5uaW5nOiBmYWxzZSxcclxuICAgICAgICBvbjogZnVuY3Rpb24gKGV2ZW50LCBoYW5kbGVyKSB7XHJcbiAgICAgICAgICAgIGV2ZW50ID09PSAnZW5kZWQnICYmIChlbmRlZCA9IGhhbmRsZXIpO1xyXG4gICAgICAgICAgICBldmVudCA9PT0gJ2NoYW5nZScgJiYgKGNoYW5nZSA9IGhhbmRsZXIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnVuOiBmdW5jdGlvbiAoZCwgbCkge1xyXG4gICAgICAgICAgICBkZWxheSA9IGwgfHwgZGVsYXkgfHwgMDtcclxuICAgICAgICAgICAgZHVyYXRpb24gPSBkIHx8IGR1cmF0aW9uIHx8IDgwMDtcclxuICAgICAgICAgICAgZGVsYXkgPiAwID8gc2V0VGltZW91dChpbml0LmJpbmQodGhpcyksIGRlbGF5KSA6IGluaXQuY2FsbCh0aGlzKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBhdXNlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5ydW5uaW5nKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB0aGlzLnBhdXNlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGRpZmYgKz0gbm93KCkgLSBzdGFydDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBsYXk6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLnJ1bm5pbmcpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIHRoaXMucGF1c2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGluaXQuY2FsbCh0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IGhhc2ggZnJvbSAnaGFzaC1zdW0nO1xyXG5pbXBvcnQgdHJhbnNpdGlvbiwgeyBlYXNlSW4gfSBmcm9tICcuL3RyYW5zaXRpb24nO1xyXG5leHBvcnQgZnVuY3Rpb24gYW5pbWF0ZShvcHRpb25zLCBydW4pIHtcclxuICAgIHZhciBzdHlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1thbmltYXRpb24tc3R5bGUtc2hlZXRdJyk7XHJcbiAgICBpZiAoIXN0eWxlKSB7XHJcbiAgICAgICAgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xyXG4gICAgICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgnYW5pbWF0aW9uLXN0eWxlLXNoZWV0JywgJycpO1xyXG4gICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xyXG4gICAgfVxyXG4gICAgdmFyIGVsLCBzdHlsZUluZGV4O1xyXG4gICAgdmFyIHN0eWxlU2hlZXQgPSBzdHlsZS5zaGVldDtcclxuICAgIHZhciBjbGFzc05hbWUgPSBcImFuaW1hdGlvbl9cIiArIGhhc2gocnVuKTtcclxuICAgIHZhciBfYSA9IF9fYXNzaWduKHsgZGVsYXk6IDAsIGR1cmF0aW9uOiA0MDAsIGVhc2U6IGVhc2VJbiB9LCBvcHRpb25zKSwgZWFzZSA9IF9hLmVhc2UsIGRlbGF5ID0gX2EuZGVsYXksIGR1cmF0aW9uID0gX2EuZHVyYXRpb247XHJcbiAgICB2YXIgaW5BbmltYXRpb24gPSB0cmFuc2l0aW9uKHsgZHVyYXRpb246IGR1cmF0aW9uLCBkZWxheTogZGVsYXksIGVhc2U6IGVhc2UgfSk7XHJcbiAgICB2YXIgb3V0QW5pbWF0aW9uID0gdHJhbnNpdGlvbih7IGR1cmF0aW9uOiBkdXJhdGlvbiwgZGVsYXk6IGRlbGF5LCBlYXNlOiBmdW5jdGlvbiAoeCkgeyByZXR1cm4gMSAtIGVhc2UoMSAtIHgpOyB9IH0pO1xyXG4gICAgZnVuY3Rpb24gc2V0Q2hhbmdlQ0Iobm9kZSwgYW5pbWF0aW9uKSB7XHJcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDI7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICBhcmdzW19pIC0gMl0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbCA9IG5vZGU7XHJcbiAgICAgICAgdmFyIGFuaW1lID0gYW5pbWF0aW9uID09PSAnaW4nID8gaW5BbmltYXRpb24gOiBvdXRBbmltYXRpb247XHJcbiAgICAgICAgdmFyIGNoYW5nZSA9IHJ1bihub2RlKTtcclxuICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XHJcbiAgICAgICAgYW5pbWUub24oJ2NoYW5nZScsIGZ1bmN0aW9uIChwcm9ncmVzcykge1xyXG4gICAgICAgICAgICBzdHlsZVNoZWV0LmNzc1J1bGVzLmxlbmd0aCAmJiBzdHlsZVNoZWV0LmRlbGV0ZVJ1bGUoc3R5bGVJbmRleCk7XHJcbiAgICAgICAgICAgIHZhciBzdHlsZVR4dCA9IGNoYW5nZShhbmltYXRpb24gPT09ICdpbicgPyBwcm9ncmVzcyA6IDEgLSBwcm9ncmVzcyk7XHJcbiAgICAgICAgICAgIHN0eWxlU2hlZXQuaW5zZXJ0UnVsZShcIi5cIiArIGNsYXNzTmFtZSArIFwie1wiICsgc3R5bGVUeHQgKyBcIn1cIik7XHJcbiAgICAgICAgICAgIHN0eWxlSW5kZXggPSBzdHlsZVNoZWV0LmNzc1J1bGVzLmxlbmd0aCAtIDE7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYW5pbWUucnVuLmFwcGx5KGFuaW1lLCBhcmdzKTtcclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgc3RhdGU6ICdpbicsXHJcbiAgICAgICAgc3RhcnRlZDogZmFsc2UsXHJcbiAgICAgICAgZW5kZWQ6IGZ1bmN0aW9uIChoYW5kbGVyKSB7XHJcbiAgICAgICAgICAgIHZhciBjYWxsYmFjayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgIGhhbmRsZXIgJiYgaGFuZGxlcigpO1xyXG4gICAgICAgICAgICAgICAgc3R5bGVTaGVldC5kZWxldGVSdWxlKHN0eWxlSW5kZXgpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBpbkFuaW1hdGlvbi5vbignZW5kZWQnLCBjYWxsYmFjayk7XHJcbiAgICAgICAgICAgIG91dEFuaW1hdGlvbi5vbignZW5kZWQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1bjogZnVuY3Rpb24gKG5vZGUpIHtcclxuICAgICAgICAgICAgdmFyIGFyZ3MgPSBbXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgICAgIGFyZ3NbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgICAgICBpZiAoc2VsZi5zdGF0ZSA9PT0gJ2luJykge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5pbi5hcHBseShzZWxmLCBbbm9kZV0uY29uY2F0KGFyZ3MpKTtcclxuICAgICAgICAgICAgICAgIHNlbGYuc3RhdGUgPSAnb3V0JztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNlbGYub3V0LmFwcGx5KHNlbGYsIFtub2RlXS5jb25jYXQoYXJncykpO1xyXG4gICAgICAgICAgICAgICAgc2VsZi5zdGF0ZSA9ICdpbic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGluOiBmdW5jdGlvbiAobm9kZSkge1xyXG4gICAgICAgICAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICAgICAgYXJnc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzZXRDaGFuZ2VDQi5hcHBseSh2b2lkIDAsIFtub2RlLCAnaW4nXS5jb25jYXQoYXJncykpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb3V0OiBmdW5jdGlvbiAobm9kZSkge1xyXG4gICAgICAgICAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICAgICAgYXJnc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzZXRDaGFuZ2VDQi5hcHBseSh2b2lkIDAsIFtub2RlLCAnb3V0J10uY29uY2F0KGFyZ3MpKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsgYW5pbWF0ZSB9IGZyb20gJy4vdG9vbHMnO1xyXG5pbXBvcnQgeyBjdWJpY091dCB9IGZyb20gJy4vdHJhbnNpdGlvbic7XHJcbmV4cG9ydCBmdW5jdGlvbiBGYWRlQW5pbWF0aW9uKG9wdGlvbnMpIHtcclxuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHsgZGVsYXk6IDAsIGR1cmF0aW9uOiA0MDAgfTtcclxuICAgIHJldHVybiBhbmltYXRlKG9wdGlvbnMsIGZ1bmN0aW9uIChub2RlKSB7XHJcbiAgICAgICAgdmFyIG9wYWNpdHkgPSArKGdldENvbXB1dGVkU3R5bGUobm9kZSkub3BhY2l0eSB8fCAwKTtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHByb2dyZXNzKSB7IHJldHVybiBcIm9wYWNpdHk6IFwiICsgcHJvZ3Jlc3MgKiBvcGFjaXR5ICsgXCI7XCI7IH07XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gRmx5QW5pbWF0aW9uKG9wdGlvbnMpIHtcclxuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHsgZGVsYXk6IDAsIGR1cmF0aW9uOiA0MDAsIHg6IDAsIHk6IDAsIGVhc2U6IGN1YmljT3V0IH07XHJcbiAgICByZXR1cm4gYW5pbWF0ZShvcHRpb25zLCBmdW5jdGlvbiAobm9kZSkge1xyXG4gICAgICAgIHZhciBvcGFjaXR5LCB0cmFuc2Zvcm07XHJcbiAgICAgICAgdmFyIF9hID0gX19hc3NpZ24oeyB4OiAwLCB5OiAwIH0sIG9wdGlvbnMpLCB4ID0gX2EueCwgeSA9IF9hLnk7XHJcbiAgICAgICAgdmFyIHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcclxuICAgICAgICBvcGFjaXR5ID0gKyhzdHlsZS5vcGFjaXR5IHx8IDApO1xyXG4gICAgICAgIHRyYW5zZm9ybSA9IHN0eWxlLnRyYW5zZm9ybSA9PT0gJ25vbmUnID8gJycgOiAoc3R5bGUudHJhbnNmb3JtID8gc3R5bGUudHJhbnNmb3JtICsgXCIgXCIgOiAnJyk7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChwcm9ncmVzcykgeyByZXR1cm4gXCJvcGFjaXR5OiBcIiArIHByb2dyZXNzICogb3BhY2l0eSArIFwiOyBcIiArXHJcbiAgICAgICAgICAgIChcInRyYW5zZm9ybTogXCIgKyB0cmFuc2Zvcm0gKyBcInRyYW5zbGF0ZShcIiArICgxIC0gcHJvZ3Jlc3MpICogKHggfHwgMCkgKyBcInB4LCBcIiArICgxIC0gcHJvZ3Jlc3MpICogKHkgfHwgMCkgKyBcInB4KTtcIik7IH07XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gU2xpZGVBbmltYXRpb24ob3B0aW9ucykge1xyXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwgeyBkZWxheTogMCwgZHVyYXRpb246IDQwMCwgZWFzZTogY3ViaWNPdXQgfTtcclxuICAgIHJldHVybiBhbmltYXRlKG9wdGlvbnMsIGZ1bmN0aW9uIChub2RlKSB7XHJcbiAgICAgICAgdmFyIG9wYWNpdHksIGhlaWdodCwgcGFkZGluZ1RvcCwgcGFkZGluZ0JvdHRvbSwgbWFyZ2luVG9wLCBtYXJnaW5Cb3R0b20sIGJvcmRlclRvcFdpZHRoLCBib3JkZXJCb3R0b21XaWR0aDtcclxuICAgICAgICB2YXIgc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKG5vZGUpO1xyXG4gICAgICAgIG9wYWNpdHkgPSArKHN0eWxlLm9wYWNpdHkgfHwgMCk7XHJcbiAgICAgICAgaGVpZ2h0ID0gcGFyc2VGbG9hdChzdHlsZS5oZWlnaHQgfHwgJzAnKTtcclxuICAgICAgICBtYXJnaW5Ub3AgPSBwYXJzZUZsb2F0KHN0eWxlLm1hcmdpblRvcCB8fCAnMCcpO1xyXG4gICAgICAgIHBhZGRpbmdUb3AgPSBwYXJzZUZsb2F0KHN0eWxlLnBhZGRpbmdUb3AgfHwgJzAnKTtcclxuICAgICAgICBtYXJnaW5Cb3R0b20gPSBwYXJzZUZsb2F0KHN0eWxlLm1hcmdpbkJvdHRvbSB8fCAnMCcpO1xyXG4gICAgICAgIHBhZGRpbmdCb3R0b20gPSBwYXJzZUZsb2F0KHN0eWxlLnBhZGRpbmdCb3R0b20gfHwgJzAnKTtcclxuICAgICAgICBib3JkZXJUb3BXaWR0aCA9IHBhcnNlRmxvYXQoc3R5bGUuYm9yZGVyVG9wV2lkdGggfHwgJzAnKTtcclxuICAgICAgICBib3JkZXJCb3R0b21XaWR0aCA9IHBhcnNlRmxvYXQoc3R5bGUuYm9yZGVyQm90dG9tV2lkdGggfHwgJzAnKTtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHByb2dyZXNzKSB7IHJldHVybiBcIm92ZXJmbG93OiBoaWRkZW47XCIgK1xyXG4gICAgICAgICAgICAoXCJoZWlnaHQ6IFwiICsgcHJvZ3Jlc3MgKiBoZWlnaHQgKyBcInB4O1wiKSArXHJcbiAgICAgICAgICAgIChcIm1hcmdpbi10b3A6IFwiICsgcHJvZ3Jlc3MgKiBtYXJnaW5Ub3AgKyBcInB4O1wiKSArXHJcbiAgICAgICAgICAgIChcInBhZGRpbmctdG9wOiBcIiArIHByb2dyZXNzICogcGFkZGluZ1RvcCArIFwicHg7XCIpICtcclxuICAgICAgICAgICAgKFwibWFyZ2luLWJvdHRvbTogXCIgKyBwcm9ncmVzcyAqIG1hcmdpbkJvdHRvbSArIFwicHg7XCIpICtcclxuICAgICAgICAgICAgKFwicGFkZGluZy1ib3R0b206IFwiICsgcHJvZ3Jlc3MgKiBwYWRkaW5nQm90dG9tICsgXCJweDtcIikgK1xyXG4gICAgICAgICAgICAoXCJib3JkZXItdG9wLXdpZHRoOiBcIiArIHByb2dyZXNzICogYm9yZGVyVG9wV2lkdGggKyBcInB4O1wiKSArXHJcbiAgICAgICAgICAgIChcIm9wYWNpdHk6IFwiICsgTWF0aC5taW4ocHJvZ3Jlc3MgKiAyMCwgMSkgKiBvcGFjaXR5ICsgXCI7XCIpICtcclxuICAgICAgICAgICAgKFwiYm9yZGVyLWJvdHRvbS13aWR0aDogXCIgKyBwcm9ncmVzcyAqIGJvcmRlckJvdHRvbVdpZHRoICsgXCJweDtcIik7IH07XHJcbiAgICB9KTtcclxufVxyXG4iLCJpbXBvcnQge1xuICBfJENvbXBDdHIsXG4gIF8kLFxuICBfJGQsXG4gIF8kYSxcbiAgXyRjZSxcbiAgXyRjdCxcbiAgXyRzYSxcbiAgXyRhbCxcbiAgXyRybCxcbiAgXyRpcyxcbiAgXyRkcyxcbiAgXyR0b1N0cixcbiAgXyRzZXRSZWYsXG4gIF8kbm9vcCxcbiAgXyRpc1R5cGUsXG4gIF8kcGx1Z2luLFxuICBfJGVtcHR5RWxzZVxufSBmcm9tICd0cmVib3IvdG9vbHMnO1xuaW1wb3J0IHsgU2xpZGVBbmltYXRpb24gfSBmcm9tICd0cmVib3ItdHJhbnNpdGlvbnMnO1xuZnVuY3Rpb24gaWZDb25kaXRpb25fMShfJHN0YXRlKSB7XG4gIHZhciBfJGZyYWcsIGRpdl8xLCB0eHRfMSwgX3JlZnM7XG4gIF8kZnJhZyA9IF8kZCgpO1xuICBfcmVmcyA9IF8kc3RhdGUuJHJlZnM7XG4gIHJldHVybiB7XG4gICAgdHlwZTogJ2lmJyxcbiAgICAkY3JlYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICBkaXZfMSA9IF8kY2UoKTtcbiAgICAgIHR4dF8xID0gXyRjdCgnSGVsbG8gd29yZCEnKTtcbiAgICAgICFfcmVmc1snYm94J10gJiYgXyRzZXRSZWYoX3JlZnMsICdib3gnKTtcbiAgICAgIF9yZWZzWydib3gnXSA9IGRpdl8xO1xuICAgIH0sXG4gICAgJG1vdW50OiBmdW5jdGlvbiAocGFyZW50LCBzaWJsaW5nKSB7XG4gICAgICB0aGlzLiR1bm1vdW50KCk7XG4gICAgICBfJGEoXyQocGFyZW50KSwgXyRmcmFnLCBfJChzaWJsaW5nKSk7XG4gICAgfSxcbiAgICAkdXBkYXRlOiBfJG5vb3AsXG4gICAgJHVubW91bnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIF8kYShkaXZfMSwgdHh0XzEpO1xuICAgICAgXyRhKF8kZnJhZywgZGl2XzEpO1xuICAgIH0sXG4gICAgJGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoaXMuJHVubW91bnQoKTtcbiAgICAgIGlmIChfJGlzVHlwZShfcmVmc1snYm94J10sICdhcnJheScpKSB7XG4gICAgICAgIHZhciBpbmRleERpdl8xID0gX3JlZnNbJ2JveCddLmluZGV4T2YoZGl2XzEpO1xuICAgICAgICBfcmVmc1snYm94J10uc3BsaWNlKGluZGV4RGl2XzEsIDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGVsZXRlIF9yZWZzWydib3gnXTtcbiAgICAgIH1cbiAgICAgIF8kZnJhZyA9IGRpdl8xID0gdHh0XzEgPSBfcmVmcyA9IHZvaWQgMDtcbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBjb25kaXRpb25fMShfJHN0YXRlKSB7XG4gIGlmIChfJHN0YXRlLnZpc2libGUpXG4gICAgcmV0dXJuIGlmQ29uZGl0aW9uXzEoXyRzdGF0ZSk7XG4gIGVsc2VcbiAgICByZXR1cm4gXyRlbXB0eUVsc2UoKTtcbn1cbmZ1bmN0aW9uIF8kdHBsQW5pbWF0aW9uKF8kc3RhdGUpIHtcbiAgdmFyIF8kZnJhZywgaW5wdXRfMSwgY2hhbmdlRXZlbnRfMSwgaGFuZGxlckNoYW5nZUV2ZW50XzEsIGxhYmVsXzEsIHR4dF8xLCBzZXRUeHRfMSwgY29uZGl0aW9uQW5jaG9yXzEsIGNvbmRpdGlvbkJsb2NrXzE7XG4gIF8kZnJhZyA9IF8kZCgpO1xuICBjaGFuZ2VFdmVudF8xID0gZnVuY3Rpb24gKF8kc3RhdGUsICRldmVudCwgJGVsKSB7XG4gICAgXyRzdGF0ZS5vbkNoYW5nZSgkZWwuY2hlY2tlZCk7XG4gIH07XG4gIHNldFR4dF8xID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAnVmlzaWJsZTogJztcbiAgfTtcbiAgJysoXyRzdGF0ZS52aXNpYmxlKSsnO1xuICAnJztcbiAgY29uZGl0aW9uQW5jaG9yXzEgPSBfJGN0KCk7XG4gIHJldHVybiB7XG4gICAgJGNyZWF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgaW5wdXRfMSA9IF8kY2UoJ2lucHV0Jyk7XG4gICAgICBsYWJlbF8xID0gXyRjZSgnbGFiZWwnKTtcbiAgICAgIHR4dF8xID0gXyRjdCgpO1xuICAgICAgdHh0XzEuZGF0YSA9IHNldFR4dF8xKF8kc3RhdGUpO1xuICAgICAgY29uZGl0aW9uQmxvY2tfMSA9IGNvbmRpdGlvbl8xKF8kc3RhdGUpO1xuICAgICAgY29uZGl0aW9uQmxvY2tfMS4kY3JlYXRlKCk7XG4gICAgICB0aGlzLiRoeWRyYXRlKCk7XG4gICAgfSxcbiAgICAkaHlkcmF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgXyRhbChpbnB1dF8xLCAnY2hhbmdlJywgaGFuZGxlckNoYW5nZUV2ZW50XzEgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgY2hhbmdlRXZlbnRfMShfJHN0YXRlLCBldmVudCwgaW5wdXRfMSk7XG4gICAgICB9KTtcbiAgICAgIF8kc2EoaW5wdXRfMSwgJ2lkJywgJ3Zpc2libGUnKTtcbiAgICAgIF8kc2EoaW5wdXRfMSwgJ3R5cGUnLCAnY2hlY2tib3gnKTtcbiAgICAgIF8kc2EobGFiZWxfMSwgJ2ZvcicsICd2aXNpYmxlJyk7XG4gICAgfSxcbiAgICAkbW91bnQ6IGZ1bmN0aW9uIChwYXJlbnQsIHNpYmxpbmcpIHtcbiAgICAgIHRoaXMuJHVubW91bnQoKTtcbiAgICAgIF8kaXMoJ3Njb3BlXzUzZTExZTc2JywgJ2RpdiB7d2lkdGg6MTI1cHg7cGFkZGluZzo0NXB4IDA7Y29sb3I6d2hpdGU7dGV4dC1hbGlnbjpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjpibGFjazt9Jyk7XG4gICAgICBfJGEoXyQocGFyZW50KSwgXyRmcmFnLCBfJChzaWJsaW5nKSk7XG4gICAgICB0aGlzLiRzaWJsaW5nRWwgPSBfJChzaWJsaW5nKTtcbiAgICAgIHRoaXMuJHBhcmVudEVsID0gc2libGluZyAmJiBfJChzaWJsaW5nKS5wYXJlbnRFbGVtZW50IHx8IF8kKHBhcmVudCk7XG4gICAgfSxcbiAgICAkdXBkYXRlOiBmdW5jdGlvbiAoXyRzdGF0ZSkge1xuICAgICAgdmFyIHVwZGF0ZVR4dF8xID0gc2V0VHh0XzEoXyRzdGF0ZSk7XG4gICAgICBpZiAodHh0XzEuZGF0YSAhPT0gXyR0b1N0cih1cGRhdGVUeHRfMSkpIHtcbiAgICAgICAgdHh0XzEuZGF0YSA9IHVwZGF0ZVR4dF8xO1xuICAgICAgfVxuICAgICAgdXBkYXRlVHh0XzEgPSB2b2lkIDA7XG4gICAgICBpZiAoY29uZGl0aW9uQmxvY2tfMSAmJiBjb25kaXRpb25CbG9ja18xLnR5cGUgPT09IGNvbmRpdGlvbl8xKF8kc3RhdGUpLnR5cGUpIHtcbiAgICAgICAgY29uZGl0aW9uQmxvY2tfMS4kdXBkYXRlKF8kc3RhdGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uZGl0aW9uQmxvY2tfMSAmJiBjb25kaXRpb25CbG9ja18xLiRkZXN0cm95KCk7XG4gICAgICAgIGNvbmRpdGlvbkJsb2NrXzEgPSBjb25kaXRpb25fMShfJHN0YXRlKTtcbiAgICAgICAgY29uZGl0aW9uQmxvY2tfMS4kY3JlYXRlKCk7XG4gICAgICAgIGNvbmRpdGlvbkJsb2NrXzEuJG1vdW50KF8kc3RhdGUuJHBhcmVudEVsLCBjb25kaXRpb25BbmNob3JfMSk7XG4gICAgICB9XG4gICAgfSxcbiAgICAkdW5tb3VudDogZnVuY3Rpb24gKCkge1xuICAgICAgXyRhKF8kZnJhZywgaW5wdXRfMSk7XG4gICAgICBfJGEobGFiZWxfMSwgdHh0XzEpO1xuICAgICAgXyRhKF8kZnJhZywgbGFiZWxfMSk7XG4gICAgICBfJGEoXyRmcmFnLCBjb25kaXRpb25BbmNob3JfMSk7XG4gICAgICBjb25kaXRpb25CbG9ja18xLiRtb3VudChfJGZyYWcsIGNvbmRpdGlvbkFuY2hvcl8xKTtcbiAgICB9LFxuICAgICRkZXN0cm95OiBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGlzLiR1bm1vdW50KCk7XG4gICAgICB0aGlzLiRwYXJlbnQgPSBudWxsO1xuICAgICAgdGhpcy4kcGFyZW50RWwgPSBudWxsO1xuICAgICAgdGhpcy4kc2libGluZ0VsID0gbnVsbDtcbiAgICAgIHRoaXMuJGNoaWxkcmVuLnNwbGljZSgwLCB0aGlzLiRjaGlsZHJlbi5sZW5ndGgpO1xuICAgICAgXyRkcygnc2NvcGVfNTNlMTFlNzYnKTtcbiAgICAgIF8kcmwoaW5wdXRfMSwgJ2NoYW5nZScsIGhhbmRsZXJDaGFuZ2VFdmVudF8xKTtcbiAgICAgIGNvbmRpdGlvbkJsb2NrXzEuJGRlc3Ryb3koKTtcbiAgICAgIGRlbGV0ZSBfJHN0YXRlLiRyb290O1xuICAgICAgXyRmcmFnID0gaW5wdXRfMSA9IGNoYW5nZUV2ZW50XzEgPSBoYW5kbGVyQ2hhbmdlRXZlbnRfMSA9IGxhYmVsXzEgPSB0eHRfMSA9IHNldFR4dF8xID0gY29uZGl0aW9uQW5jaG9yXzEgPSBjb25kaXRpb25CbG9ja18xID0gdm9pZCAwO1xuICAgIH1cbiAgfTtcbn1cbnZhciBhbmltYXRpb24gPSBTbGlkZUFuaW1hdGlvbih7XG4gIHk6IDMwMCxcbiAgZHVyYXRpb246IDEyMDBcbn0pO1xuZnVuY3Rpb24gQW5pbWF0aW9uKF8kYXR0cnMsIF8kcGFyZW50KSB7XG4gIF8kQ29tcEN0ci5jYWxsKHRoaXMsIF8kYXR0cnMsIF8kdHBsQW5pbWF0aW9uLCB7XG4gICAgbW9kZWw6IHtcbiAgICAgIHZpc2libGU6IGZhbHNlLFxuICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgcmVmcyA9IHRoaXMuJHJlZnM7XG4gICAgICAgIGFuaW1hdGlvbi5lbmRlZChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgIXZhbHVlICYmIF90aGlzLiR1cGRhdGUoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgIHRoaXMuJHNldCgndmlzaWJsZScsIHZhbHVlKTtcbiAgICAgICAgICBhbmltYXRpb24uaW4ocmVmcy5ib3gpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudmlzaWJsZSA9IHZhbHVlO1xuICAgICAgICAgIGFuaW1hdGlvbi5vdXQocmVmcy5ib3gpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCBfJHBhcmVudCk7XG4gICFfJHBhcmVudCAmJiB0aGlzLiRjcmVhdGUoKTtcbn1cbkFuaW1hdGlvbi5wbHVnaW4gPSBfJHBsdWdpbjtcbkFuaW1hdGlvbi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKF8kQ29tcEN0ci5wcm90b3R5cGUpO1xuQW5pbWF0aW9uLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEFuaW1hdGlvbjtcbmV4cG9ydCBkZWZhdWx0IEFuaW1hdGlvbjsiLCJpbXBvcnQgQW5pbWF0aW9uIGZyb20gJy4vY29tcG9uZW50cy9hbmltYXRpb24uaHRtbCc7XHJcblxyXG5jb25zdCBhbmltYXRpb24gPSBuZXcgQW5pbWF0aW9uKCk7XHJcblxyXG5hbmltYXRpb24uJG1vdW50KCdtYWluJyk7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./main.ts\n");

/***/ })

/******/ });