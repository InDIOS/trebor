/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./main.ts":
/*!*****************************!*\
  !*** ./main.ts + 2 modules ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("\n// CONCATENATED MODULE: d:/DEVELOP/Work in Progress/trebor-repos/trebor/tools/index.js\nvar _$assign = Object['assign'] || function (t) {\r\n    for (var s = void 0, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s)\r\n            if (_$hasProp(s, p))\r\n                t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nfunction _$CompCtr(attrs, template, options, parent) {\r\n    var self = this;\r\n    var props = ['$slots', '$refs', '$filters', '$directives', '_events', '_watchers'];\r\n    var _$set = function (prop, value) { _$def(self, prop, { value: value, writable: true }); };\r\n    if (!attrs)\r\n        attrs = {};\r\n    _$e(props, function (prop) { _$def(self, prop, { value: {} }); });\r\n    _$set('$parent', parent || null);\r\n    _$set('$children', []);\r\n    _$set('_subscribers', {});\r\n    _$set('$options', options);\r\n    var opts = self.$options;\r\n    if (!opts.attrs)\r\n        opts.attrs = {};\r\n    if (!opts.children)\r\n        opts.children = {};\r\n    _$e(_$CompCtr['_plugins'], function (plugin) {\r\n        plugin.fn.call(self, _$CompCtr, plugin.options);\r\n    });\r\n    if (opts.filters)\r\n        _$assign(self.$filters, opts.filters);\r\n    if (opts.directives)\r\n        _$e(opts.directives, function (drt, k) { self.$directives[k] = _$drt(drt); });\r\n    _$e(opts.attrs, function (attrOps, key) {\r\n        _$def(self, (_$isType(key, 'number') ? attrOps : key), {\r\n            get: function () {\r\n                if (_$isType(attrOps, 'string')) {\r\n                    var value = attrs[attrOps];\r\n                    return _$isType(value, 'function') ? value() : value;\r\n                }\r\n                else {\r\n                    if (!_$hasProp(attrs, key) && attrOps.required) {\r\n                        console.error(\"Attribute '\" + key + \"' must be present because it's required.\");\r\n                    }\r\n                    else {\r\n                        var value = _$isType(attrs[key], 'function') ? attrs[key]() : attrs[key];\r\n                        if (value === void 0 && _$hasProp(attrOps, 'default')) {\r\n                            var def = attrOps.default;\r\n                            value = _$isType(def, 'function') ? def() : def;\r\n                        }\r\n                        var typ = attrOps.type;\r\n                        if (typ && !_$isType(value, typ) && attrOps.required) {\r\n                            return console.error(\"Attribute '\" + key + \"' must be type '\" + typ + \"'.\");\r\n                        }\r\n                        return _$toType(value, value === void 0 ? 'undefined' : typ, self, key);\r\n                    }\r\n                }\r\n            },\r\n            set: function () {\r\n                console.error(\"Can not modify attribute '\" + key + \"' because attributes al read only.\");\r\n            },\r\n            enumerable: true, configurable: true\r\n        });\r\n    });\r\n    var data = opts.model || {};\r\n    var _loop_1 = function (key) {\r\n        if (_$hasProp(data, key)) {\r\n            var desc = Object.getOwnPropertyDescriptor(data, key);\r\n            if (desc.value && _$isArray(desc.value)) {\r\n                desc.value = new _$List(desc.value, self, key);\r\n            }\r\n            else {\r\n                if (desc.get) {\r\n                    var getter_1 = desc.get;\r\n                    desc.get = function () {\r\n                        var value = getter_1.call(self);\r\n                        if (_$isArray(value))\r\n                            value = new _$List(value, self, key);\r\n                        return value;\r\n                    };\r\n                }\r\n                if (desc.set) {\r\n                    var setter_1 = desc.set;\r\n                    desc.set = function (v) {\r\n                        if (_$isArray(v))\r\n                            v = new _$List(v, self, key);\r\n                        setter_1.call(self, v);\r\n                    };\r\n                }\r\n            }\r\n            _$def(self, key, desc);\r\n        }\r\n    };\r\n    for (var key in data) {\r\n        _loop_1(key);\r\n    }\r\n    var tpl = template(self, opts.children);\r\n    _$e(tpl, function (value, key) {\r\n        _$def(self, key, {\r\n            value: (function (key) {\r\n                var hook = key[1].toUpperCase() + key.slice(2);\r\n                var bhook = opts[\"before\" + hook];\r\n                var ahook = opts[\"after\" + hook];\r\n                return function () {\r\n                    bhook && bhook.call(this);\r\n                    key.slice(1) === 'update' ? value.call(this, this) : value.apply(this, arguments);\r\n                    ahook && ahook.call(this);\r\n                };\r\n            })(key)\r\n        });\r\n    });\r\n    _$def(self, '$data', {\r\n        get: function () {\r\n            return _$toPlainObj(this);\r\n        }\r\n    });\r\n}\r\nfunction _$plugin(fn, options) {\r\n    _$CompCtr['_plugins'] = _$CompCtr['_plugins'] || [];\r\n    _$CompCtr['_plugins'].push({ options: options, fn: fn });\r\n}\r\n_$assign(_$CompCtr.prototype, {\r\n    $get: function (path) {\r\n        return _$accesor(this, path);\r\n    },\r\n    $set: function (path, value) {\r\n        _$accesor(this, path, value);\r\n    },\r\n    $on: function (event, handler) {\r\n        var _this = this;\r\n        if (!this._events[event]) {\r\n            this._events[event] = [];\r\n        }\r\n        var i = this._events[event].push(handler);\r\n        return {\r\n            $off: function () {\r\n                _this._events[event].splice(i - 1, 1);\r\n            }\r\n        };\r\n    },\r\n    $once: function (event, handler) {\r\n        var e = this.$on(event, function (args) {\r\n            handler(args);\r\n            e.$off();\r\n        });\r\n    },\r\n    $fire: function (event, data) {\r\n        if (this._events[event]) {\r\n            _$e(this._events[event], function (handler) { handler(data); });\r\n        }\r\n    },\r\n    $notify: function (key) {\r\n        if (this._subscribers[key]) {\r\n            _$e(this._subscribers[key], function (suscriber) { suscriber(); });\r\n        }\r\n    },\r\n    $observe: function (deps, listener) {\r\n        var _this = this;\r\n        var subs = [];\r\n        if (_$isArray(deps)) {\r\n            _$e(deps, function (dep) {\r\n                subs.push({ sub: dep, i: _$subs.call(_this, dep, listener) });\r\n            });\r\n        }\r\n        else {\r\n            subs.push({ sub: deps, i: _$subs.call(this, deps, listener) });\r\n        }\r\n        return {\r\n            $unobserve: function () {\r\n                _$e(subs, function (sub) {\r\n                    _this._subscribers[sub.sub].splice(sub.i, 1);\r\n                });\r\n            }\r\n        };\r\n    },\r\n    $watch: function (key, watcher) {\r\n        var _this = this;\r\n        if (!this._watchers[key]) {\r\n            this._watchers[key] = [];\r\n        }\r\n        var i = this._watchers[key].push(watcher.bind(this));\r\n        return {\r\n            $unwatch: function () {\r\n                _this._watchers[key].splice(i - 1, 1);\r\n            }\r\n        };\r\n    }\r\n});\r\nvar array = Array.prototype;\r\nfunction _$toArgs(args, start) {\r\n    if (start === void 0) { start = 0; }\r\n    return array.slice.call(args, start);\r\n}\r\nfunction _$arrayValues(list, value, root, key) {\r\n    array.push.apply(list, value.map(function (v, i) {\r\n        if (list.length !== 0)\r\n            i += list.length;\r\n        return !(_$isType(v, _$List)) && _$isArray(v) ? new _$List(v, root, key + \".\" + i) : v;\r\n    }));\r\n}\r\nfunction _$List(value, root, key) {\r\n    var self = this;\r\n    Array.apply(self, [value.length]);\r\n    var desc = { writable: false, configurable: false, enumerable: false };\r\n    _$def(self, '_key', _$assign({ value: key }, desc));\r\n    _$def(self, '_root', _$assign({ value: root }, desc));\r\n    _$arrayValues(self, value, root, key);\r\n    desc.writable = true;\r\n    _$def(self, 'length', _$assign({ value: self.length }, desc));\r\n}\r\n_$List.prototype = Object.create(array);\r\n_$List.prototype.constructor = _$List;\r\n['pop', 'push', 'reverse', 'shift', 'sort', 'fill', 'unshift', 'splice'].forEach(function (method) {\r\n    _$List.prototype[method] = function () {\r\n        var self = this;\r\n        var old = self.slice();\r\n        var result;\r\n        if (method === 'push') {\r\n            _$arrayValues(self, _$toArgs(arguments), self._root, self._key);\r\n            result = self.length;\r\n        }\r\n        else {\r\n            result = array[method].apply(self, arguments);\r\n        }\r\n        _$dispatch(self._root, self._key, old, self.slice());\r\n        return result;\r\n    };\r\n});\r\n_$List.prototype.pull = function (index) {\r\n    var self = this;\r\n    var items = _$toArgs(arguments, 1);\r\n    var length = self.length;\r\n    if (index > length) {\r\n        length = index + 1;\r\n        var pull = new Array(index - self.length);\r\n        pull.push.apply(pull, items);\r\n        for (var i = 0; i < length; i++) {\r\n            if (i === index) {\r\n                self.push.apply(self, pull);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        self.splice.apply(self, [index, 1].concat(items));\r\n    }\r\n};\r\nfunction _$dispatch(root, key, oldVal, value) {\r\n    root.$notify(key);\r\n    if (root._watchers[key]) {\r\n        _$e(root._watchers[key], function (watcher) { watcher(oldVal, value); });\r\n    }\r\n    root.$update();\r\n}\r\nfunction _$isType(value, type) {\r\n    return _$type(type) === 'string' ? type.split('\\|').some(function (t) { return t.trim() === _$type(value); }) : value instanceof type;\r\n}\r\nfunction _$isObject(obj) {\r\n    return _$isType(obj, 'object');\r\n}\r\nfunction _$isArray(obj) {\r\n    return Array.isArray ? Array.isArray(obj) : _$isType(obj, 'array');\r\n}\r\nfunction _$toType(value, type, root, key) {\r\n    switch (type) {\r\n        case 'date':\r\n            return new Date(value);\r\n        case 'string':\r\n            return value.toString();\r\n        case 'number':\r\n            return +value;\r\n        case 'boolean':\r\n            return !!value;\r\n        case 'array':\r\n            return _$isType(value, _$List) ? value : new _$List(value, root, key);\r\n        default:\r\n            return value;\r\n    }\r\n}\r\nfunction _$type(obj) {\r\n    return /\\[object (\\w+)\\]/.exec(Object.prototype.toString.call(obj))[1].toLowerCase();\r\n}\r\nfunction _$hasProp(obj, prop) {\r\n    return obj.hasOwnProperty(prop);\r\n}\r\nfunction _$drt(directive) {\r\n    var hasProp = function (prop, instance, options, element) { return _$isObject(directive) && directive[prop] && directive[prop](instance, options, element); };\r\n    return {\r\n        $init: function (instance, options, element) {\r\n            hasProp('$init', instance, options, element);\r\n        },\r\n        $inserted: function (instance, options, element) {\r\n            hasProp('$inserted', instance, options, element);\r\n        },\r\n        $update: function (instance, options, element) {\r\n            if (_$isType(directive, 'function')) {\r\n                directive(instance, options, element);\r\n            }\r\n            else {\r\n                hasProp('$update', instance, options, element);\r\n            }\r\n        },\r\n        $destroy: function (instance, options, element) {\r\n            hasProp('$destroy', instance, options, element);\r\n        }\r\n    };\r\n}\r\nfunction _$noop() { }\r\nfunction _$add(inst, child) {\r\n    inst.$children.push(child);\r\n}\r\nfunction _$remove(inst, child) {\r\n    var index = inst.$children.indexOf(child);\r\n    index >= 0 && inst.$children.splice(index, 1);\r\n}\r\nfunction _$toStr(obj) {\r\n    var str = _$type(obj);\r\n    return !/null|undefined/.test(str) ? obj.toString() : str;\r\n}\r\nfunction _$toPlainObj(obj) {\r\n    var data = {};\r\n    _$e(_$isObject(obj) ? obj : {}, function (_v, k) {\r\n        if (k[0] !== '$' && !_$isType(obj[k], 'function')) {\r\n            if (_$isType(obj[k], _$List)) {\r\n                data[k] = obj[k].map(_$toPlainObj);\r\n            }\r\n            else if (_$isObject(obj[k])) {\r\n                data[k] = _$toPlainObj(obj[k]);\r\n            }\r\n            else {\r\n                data[k] = obj[k];\r\n            }\r\n        }\r\n    });\r\n    return _$isObject(obj) ? data : obj;\r\n}\r\nfunction _$setRef(obj, prop) {\r\n    var value = [];\r\n    _$def(obj, prop, {\r\n        get: function () {\r\n            return value.length <= 1 ? value[0] : value;\r\n        },\r\n        set: function (val) {\r\n            if (val && !~value.indexOf(val)) {\r\n                value.push(val);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n}\r\nfunction _$accesor(object, path, value) {\r\n    return path.split('.').reduce(function (obj, key, i, arr) {\r\n        if (_$isType(value, 'undefined')) {\r\n            if (obj == null) {\r\n                arr.splice(0, arr.length);\r\n                return i > 0 && obj === null ? obj : undefined;\r\n            }\r\n        }\r\n        else {\r\n            if (i === arr.length - 1) {\r\n                if (_$isType(obj, _$List) && (+key).toString() === key) {\r\n                    obj.pull(+key, value);\r\n                }\r\n                else {\r\n                    var oldVal = obj[key];\r\n                    obj[key] = !_$isType(value, _$List) && _$isArray(value) ? new _$List(value, object, key) : value;\r\n                    _$dispatch(object, path, oldVal, obj[key]);\r\n                }\r\n            }\r\n            else if (!_$isObject(obj[key])) {\r\n                obj[key] = {};\r\n            }\r\n        }\r\n        return obj ? obj[key] : null;\r\n    }, object);\r\n}\r\nfunction _$emptyElse() {\r\n    return { type: 'empty-else', $create: _$noop, $mount: _$noop, $update: _$noop, $destroy: _$noop };\r\n}\r\nfunction _$subs(dep, listener) {\r\n    if (!this._subscribers[dep]) {\r\n        this._subscribers[dep] = [];\r\n    }\r\n    return this._subscribers[dep].push(listener.bind(this)) - 1;\r\n}\r\nfunction _$def(obj, key, desc) {\r\n    Object.defineProperty(obj, key, desc);\r\n}\r\nfunction _$isKey(event, key) {\r\n    return event.key.toLowerCase() === key || !!event[key + \"Key\"];\r\n}\r\nfunction _$bindGroup(input, selection) {\r\n    var _$index = selection.indexOf(input.value);\r\n    if (input.checked && !~_$index)\r\n        selection.push(input.value);\r\n    else\r\n        selection.splice(_$index, 1);\r\n}\r\nfunction _$(selector, parent) {\r\n    return _$isType(selector, 'string') ? (parent || document).querySelector(selector) : selector;\r\n}\r\nfunction _$d() {\r\n    return document.createDocumentFragment();\r\n}\r\nfunction _$a(parent, child, sibling) {\r\n    if (_$isType(sibling, 'boolean') && sibling)\r\n        parent.parentElement.replaceChild(child, parent);\r\n    else if (!sibling)\r\n        parent.appendChild(child);\r\n    else\r\n        parent.insertBefore(child, sibling);\r\n}\r\nfunction _$as(source, dest) {\r\n    var childNodes = source.childNodes;\r\n    var attributes = source.attributes;\r\n    for (var i = 0; i < childNodes.length; i++) {\r\n        _$a(dest, childNodes[i]);\r\n    }\r\n    for (var i = 0; i < attributes.length; i++) {\r\n        var attr = attributes[i];\r\n        dest.setAttributeNS(source.namespaceURI, attr.name, attr.value);\r\n    }\r\n    source.parentElement.replaceChild(dest, source);\r\n    return dest;\r\n}\r\nfunction _$r(el, parent) {\r\n    var root = parent || el.parentElement;\r\n    if (root)\r\n        root.removeChild(el);\r\n}\r\nfunction _$ce(tagName) {\r\n    return document.createElement(tagName || 'div');\r\n}\r\nfunction _$cse(tagName) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', tagName || 'svg');\r\n}\r\nfunction _$ct(content) {\r\n    return document.createTextNode(content || '');\r\n}\r\nfunction _$cm(content) {\r\n    return document.createComment(content || '');\r\n}\r\nfunction _$sa(el, attr, value) {\r\n    el.setAttribute(attr, value);\r\n}\r\nfunction _$ga(el, attr) {\r\n    return el.getAttribute(attr);\r\n}\r\nfunction _$al(el, event, handler) {\r\n    el.addEventListener(event, handler, false);\r\n}\r\nfunction _$ul(el, event, oldHandler, newHandler) {\r\n    _$rl(el, event, oldHandler);\r\n    _$al(el, event, oldHandler = newHandler);\r\n    return oldHandler;\r\n}\r\nfunction _$rl(el, event, handler) {\r\n    el.removeEventListener(event, handler, false);\r\n}\r\nfunction _$bc(value) {\r\n    var classes = '';\r\n    if (_$isType(value, 'string')) {\r\n        classes += \" \" + value;\r\n    }\r\n    else if (_$isArray(value)) {\r\n        classes = value.map(_$bc).join(' ');\r\n    }\r\n    else if (_$isObject(value)) {\r\n        for (var key in value)\r\n            if (_$hasProp(value, key) && value[key])\r\n                classes += \" \" + key;\r\n    }\r\n    return classes.trim();\r\n}\r\nfunction _$bs(value) {\r\n    var el = _$ce();\r\n    if (_$isObject(value)) {\r\n        var style_1 = el.style;\r\n        _$e(value, function (val, prop) {\r\n            if (val !== style_1[prop]) {\r\n                style_1[prop] = val;\r\n            }\r\n        });\r\n        return style_1.cssText;\r\n    }\r\n    else if (_$isType(value, 'string')) {\r\n        return value;\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\nfunction _$f(root, obj, loop) {\r\n    var items = {}, loopParent, loopSibling;\r\n    var globs = _$toArgs(arguments, 3);\r\n    _$e(obj, function (item, i) { items[i] = loop.apply(null, [root, item, i].concat(globs)); });\r\n    return {\r\n        $create: function () {\r\n            _$e(items, function (item) { item.$create(); });\r\n        },\r\n        $mount: function (parent, sibling) {\r\n            loopParent = _$(parent);\r\n            loopSibling = _$(sibling);\r\n            _$e(items, function (item) { item.$mount(loopParent, loopSibling); });\r\n        },\r\n        $update: function (root, obj) {\r\n            var globs = _$toArgs(arguments, 2);\r\n            _$e(items, function (item, i) {\r\n                if (obj[i]) {\r\n                    item.$update.apply(item, [root, obj[i], i].concat(globs));\r\n                }\r\n                else {\r\n                    item.$destroy();\r\n                    delete items[i];\r\n                }\r\n            });\r\n            _$e(obj, function (item, i) {\r\n                if (!items[i]) {\r\n                    items[i] = loop.apply(null, [root, item, i].concat(globs));\r\n                    items[i].$create();\r\n                    items[i].$mount(loopParent, loopSibling);\r\n                }\r\n            });\r\n        },\r\n        $destroy: function () {\r\n            _$e(items, function (item) { item.$destroy(); });\r\n        }\r\n    };\r\n}\r\nfunction _$e(obj, cb) {\r\n    for (var key in obj) {\r\n        if (_$hasProp(obj, key)) {\r\n            cb(obj[key], (isNaN(+key) ? key : +key));\r\n        }\r\n    }\r\n}\r\nfunction _$is(id, css) {\r\n    var isNew = false;\r\n    var style = _$(\"#\" + id, document.head);\r\n    if (!style) {\r\n        isNew = true;\r\n        style = _$ce('style');\r\n        style.id = id;\r\n        _$sa(style, 'refs', '1');\r\n    }\r\n    if (style.textContent !== css) {\r\n        style.textContent = css;\r\n    }\r\n    if (isNew) {\r\n        _$a(document.head, style);\r\n    }\r\n    else {\r\n        var count = +_$ga(style, 'refs');\r\n        _$sa(style, 'refs', (++count).toString());\r\n    }\r\n}\r\nfunction _$ds(id) {\r\n    var style = _$(\"#\" + id, document.head);\r\n    if (style) {\r\n        var count = +_$ga(style, 'refs');\r\n        if (--count === 0) {\r\n            _$r(style, document.head);\r\n        }\r\n        else {\r\n            _$sa(style, 'refs', count.toString());\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map\n// CONCATENATED MODULE: ./components/counter.html\n\nfunction _$tplCounter(_$state) {\n  var _$frag, div_1, h3_1, txt_1, label_1, txt_2, strong_1, txt_3, setTxt_3, bindClassStrong_1, br_1, button_1, txt_4, clickEvent_1, handlerClickEvent_1, button_2, txt_5, clickEvent_2, handlerClickEvent_2;\n  _$frag = _$d();\n  setTxt_3 = function (_$state) {\n    return _$state.count;\n  };\n  bindClassStrong_1 = function (_$state) {\n    return _$bc(_$state.negative).trim();\n  };\n  clickEvent_1 = function (_$state) {\n    _$state.increment();\n  };\n  clickEvent_2 = function (_$state) {\n    _$state.decrement();\n  };\n  return {\n    $create: function () {\n      div_1 = _$ce();\n      h3_1 = _$ce('h3');\n      txt_1 = _$ct('Counter Example');\n      label_1 = _$ce('label');\n      txt_2 = _$ct('Counter: ');\n      strong_1 = _$ce('strong');\n      txt_3 = _$ct();\n      txt_3.data = setTxt_3(_$state);\n      br_1 = _$ce('br');\n      button_1 = _$ce('button');\n      txt_4 = _$ct('Increment');\n      button_2 = _$ce('button');\n      txt_5 = _$ct('Decrement');\n      this.$hydrate();\n    },\n    $hydrate: function () {\n      _$sa(h3_1, 'class', 'title is-3');\n      _$sa(strong_1, 'class', _$toStr(bindClassStrong_1(_$state)));\n      _$al(button_1, 'click', handlerClickEvent_1 = function (event) {\n        clickEvent_1(_$state, event, button_1);\n      });\n      _$sa(button_1, 'class', 'button is-primary');\n      _$al(button_2, 'click', handlerClickEvent_2 = function (event) {\n        clickEvent_2(_$state, event, button_2);\n      });\n      _$sa(button_2, 'class', 'button is-danger');\n      _$sa(div_1, 'class', 'container');\n    },\n    $mount: function (parent, sibling) {\n      this.$unmount();\n      _$is('scope_13212076', '.negative {color:crimson;}');\n      _$a(_$(parent), _$frag, _$(sibling));\n      this.$siblingEl = _$(sibling);\n      this.$parentEl = sibling && _$(sibling).parentElement || _$(parent);\n    },\n    $update: function (_$state) {\n      var updateTxt_3 = setTxt_3(_$state);\n      if (txt_3.data !== _$toStr(updateTxt_3)) {\n        txt_3.data = updateTxt_3;\n      }\n      updateTxt_3 = void 0;\n      var updateClassStrong_1 = _$toStr(bindClassStrong_1(_$state));\n      if (_$ga(strong_1, 'class') !== updateClassStrong_1) {\n        _$sa(strong_1, 'class', updateClassStrong_1);\n      }\n      updateClassStrong_1 = void 0;\n    },\n    $unmount: function () {\n      _$a(h3_1, txt_1);\n      _$a(div_1, h3_1);\n      _$a(label_1, txt_2);\n      _$a(div_1, label_1);\n      _$a(strong_1, txt_3);\n      _$a(div_1, strong_1);\n      _$a(div_1, br_1);\n      _$a(button_1, txt_4);\n      _$a(div_1, button_1);\n      _$a(button_2, txt_5);\n      _$a(div_1, button_2);\n      _$a(_$frag, div_1);\n    },\n    $destroy: function () {\n      this.$unmount();\n      this.$parent = null;\n      this.$parentEl = null;\n      this.$siblingEl = null;\n      this.$children.splice(0, this.$children.length);\n      _$ds('scope_13212076');\n      _$rl(button_1, 'click', handlerClickEvent_1);\n      _$rl(button_2, 'click', handlerClickEvent_2);\n      delete _$state.$root;\n      _$frag = div_1 = h3_1 = txt_1 = label_1 = txt_2 = strong_1 = txt_3 = setTxt_3 = bindClassStrong_1 = br_1 = button_1 = txt_4 = clickEvent_1 = handlerClickEvent_1 = button_2 = txt_5 = clickEvent_2 = handlerClickEvent_2 = void 0;\n    }\n  };\n}\nfunction Counter(_$attrs, _$parent) {\n  _$CompCtr.call(this, _$attrs, _$tplCounter, {\n    model: {\n      count: 0,\n      increment: function () {\n        this.$set('count', this.count + 1);\n      },\n      decrement: function () {\n        this.$set('count', this.count - 1);\n      },\n      get negative() {\n        return { negative: this.count < 0 };\n      }\n    }\n  }, _$parent);\n  !_$parent && this.$create();\n}\nCounter.plugin = _$plugin;\nCounter.prototype = Object.create(_$CompCtr.prototype);\nCounter.prototype.constructor = Counter;\n/* harmony default export */ var counter = (Counter);\n// CONCATENATED MODULE: ./main.ts\n\r\nvar main_counter = new counter();\r\nmain_counter.$mount('main');\r\n\n\n//# sourceURL=webpack:///./main.ts_+_2_modules?");

/***/ })

/******/ });