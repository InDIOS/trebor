/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./main.ts":
/*!*****************************!*\
  !*** ./main.ts + 3 modules ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("\n// CONCATENATED MODULE: d:/Robert/Working/trebor-repos/trebor/tools/index.js\nvar _$assign = Object['assign'] || function (t) {\r\n    for (var s = void 0, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s)\r\n            if (_$hasProp(s, p))\r\n                t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nfunction _$CompCtr(attrs, template, options, parent) {\r\n    var self = this;\r\n    var props = ['$slots', '$refs', '$filters', '$directives', '_events', '_watchers'];\r\n    var _$set = function (prop, value) { _$def(self, prop, { value: value, writable: true }); };\r\n    if (!attrs)\r\n        attrs = {};\r\n    _$e(props, function (prop) { _$def(self, prop, { value: {} }); });\r\n    _$set('$parent', parent || null);\r\n    _$set('$children', []);\r\n    _$set('_subscribers', {});\r\n    _$set('$options', options);\r\n    var opts = self.$options;\r\n    if (!opts.attrs)\r\n        opts.attrs = {};\r\n    if (!opts.children)\r\n        opts.children = {};\r\n    _$e(_$CompCtr['_plugins'], function (plugin) {\r\n        plugin.fn.call(self, _$CompCtr, plugin.options);\r\n    });\r\n    if (opts.filters)\r\n        _$assign(self.$filters, opts.filters);\r\n    if (opts.directives)\r\n        _$e(opts.directives, function (drt, k) { self.$directives[k] = _$drt(drt); });\r\n    _$e(opts.attrs, function (attrOps, key) {\r\n        _$def(self, (_$isType(key, 'number') ? attrOps : key), {\r\n            get: function () {\r\n                if (_$isType(attrOps, 'string')) {\r\n                    var value = attrs[attrOps];\r\n                    return _$isType(value, 'function') ? value() : value;\r\n                }\r\n                else {\r\n                    if (!_$hasProp(attrs, key) && attrOps.required) {\r\n                        console.error(\"Attribute '\" + key + \"' must be present because it's required.\");\r\n                    }\r\n                    else {\r\n                        var value = _$isType(attrs[key], 'function') ? attrs[key]() : attrs[key];\r\n                        if (value === void 0 && _$hasProp(attrOps, 'default')) {\r\n                            var def = attrOps.default;\r\n                            value = _$isType(def, 'function') ? def() : def;\r\n                        }\r\n                        var typ = attrOps.type;\r\n                        if (typ && !_$isType(value, typ) && attrOps.required) {\r\n                            return console.error(\"Attribute '\" + key + \"' must be type '\" + typ + \"'.\");\r\n                        }\r\n                        return _$toType(value, value === void 0 ? 'undefined' : typ, self, key);\r\n                    }\r\n                }\r\n            },\r\n            set: function () {\r\n                console.error(\"Can not modify attribute '\" + key + \"' because attributes al read only.\");\r\n            },\r\n            enumerable: true, configurable: true\r\n        });\r\n    });\r\n    var data = opts.model || {};\r\n    var _loop_1 = function (key) {\r\n        if (_$hasProp(data, key)) {\r\n            var desc = Object.getOwnPropertyDescriptor(data, key);\r\n            if (desc.value && _$isArray(desc.value)) {\r\n                desc.value = new _$List(desc.value, self, key);\r\n            }\r\n            else {\r\n                if (desc.get) {\r\n                    var getter_1 = desc.get;\r\n                    desc.get = function () {\r\n                        var value = getter_1.call(self);\r\n                        if (_$isArray(value))\r\n                            value = new _$List(value, self, key);\r\n                        return value;\r\n                    };\r\n                }\r\n                if (desc.set) {\r\n                    var setter_1 = desc.set;\r\n                    desc.set = function (v) {\r\n                        if (_$isArray(v))\r\n                            v = new _$List(v, self, key);\r\n                        setter_1.call(self, v);\r\n                    };\r\n                }\r\n            }\r\n            _$def(self, key, desc);\r\n        }\r\n    };\r\n    for (var key in data) {\r\n        _loop_1(key);\r\n    }\r\n    var tpl = template(self, opts.children);\r\n    _$e(tpl, function (value, key) {\r\n        _$def(self, key, {\r\n            value: (function (key) {\r\n                var hook = key[1].toUpperCase() + key.slice(2);\r\n                var bhook = opts[\"before\" + hook];\r\n                var ahook = opts[\"after\" + hook];\r\n                return function () {\r\n                    bhook && bhook.call(this);\r\n                    key.slice(1) === 'update' ? value.call(this, this) : value.apply(this, arguments);\r\n                    ahook && ahook.call(this);\r\n                };\r\n            })(key)\r\n        });\r\n    });\r\n    _$def(self, '$data', {\r\n        get: function () {\r\n            return _$toPlainObj(this);\r\n        }\r\n    });\r\n}\r\nfunction _$plugin(fn, options) {\r\n    _$CompCtr['_plugins'] = _$CompCtr['_plugins'] || [];\r\n    _$CompCtr['_plugins'].push({ options: options, fn: fn });\r\n}\r\n_$assign(_$CompCtr.prototype, {\r\n    $get: function (path) {\r\n        return _$accesor(this, path);\r\n    },\r\n    $set: function (path, value) {\r\n        _$accesor(this, path, value);\r\n    },\r\n    $on: function (event, handler) {\r\n        var _this = this;\r\n        if (!this._events[event]) {\r\n            this._events[event] = [];\r\n        }\r\n        var i = this._events[event].push(handler);\r\n        return {\r\n            $off: function () {\r\n                _this._events[event].splice(i - 1, 1);\r\n            }\r\n        };\r\n    },\r\n    $once: function (event, handler) {\r\n        var e = this.$on(event, function (args) {\r\n            handler(args);\r\n            e.$off();\r\n        });\r\n    },\r\n    $fire: function (event, data) {\r\n        if (this._events[event]) {\r\n            _$e(this._events[event], function (handler) { handler(data); });\r\n        }\r\n    },\r\n    $notify: function (key) {\r\n        if (this._subscribers[key]) {\r\n            _$e(this._subscribers[key], function (suscriber) { suscriber(); });\r\n        }\r\n    },\r\n    $observe: function (deps, listener) {\r\n        var _this = this;\r\n        var subs = [];\r\n        if (_$isArray(deps)) {\r\n            _$e(deps, function (dep) {\r\n                subs.push({ sub: dep, i: _$subs.call(_this, dep, listener) });\r\n            });\r\n        }\r\n        else {\r\n            subs.push({ sub: deps, i: _$subs.call(this, deps, listener) });\r\n        }\r\n        return {\r\n            $unobserve: function () {\r\n                _$e(subs, function (sub) {\r\n                    _this._subscribers[sub.sub].splice(sub.i, 1);\r\n                });\r\n            }\r\n        };\r\n    },\r\n    $watch: function (key, watcher) {\r\n        var _this = this;\r\n        if (!this._watchers[key]) {\r\n            this._watchers[key] = [];\r\n        }\r\n        var i = this._watchers[key].push(watcher.bind(this));\r\n        return {\r\n            $unwatch: function () {\r\n                _this._watchers[key].splice(i - 1, 1);\r\n            }\r\n        };\r\n    }\r\n});\r\nvar array = Array.prototype;\r\nfunction _$toArgs(args, start) {\r\n    if (start === void 0) { start = 0; }\r\n    return array.slice.call(args, start);\r\n}\r\nfunction _$arrayValues(list, value, root, key) {\r\n    array.push.apply(list, value.map(function (v, i) {\r\n        if (list.length !== 0)\r\n            i += list.length;\r\n        return !(_$isType(v, _$List)) && _$isArray(v) ? new _$List(v, root, key + \".\" + i) : v;\r\n    }));\r\n}\r\nfunction _$List(value, root, key) {\r\n    var self = this;\r\n    Array.apply(self, [value.length]);\r\n    var desc = { writable: false, configurable: false, enumerable: false };\r\n    _$def(self, '_key', _$assign({ value: key }, desc));\r\n    _$def(self, '_root', _$assign({ value: root }, desc));\r\n    _$arrayValues(self, value, root, key);\r\n    desc.writable = true;\r\n    _$def(self, 'length', _$assign({ value: self.length }, desc));\r\n}\r\n_$List.prototype = Object.create(array);\r\n_$List.prototype.constructor = _$List;\r\n['pop', 'push', 'reverse', 'shift', 'sort', 'fill', 'unshift', 'splice'].forEach(function (method) {\r\n    _$List.prototype[method] = function () {\r\n        var self = this;\r\n        var old = self.slice();\r\n        var result;\r\n        if (method === 'push') {\r\n            _$arrayValues(self, _$toArgs(arguments), self._root, self._key);\r\n            result = self.length;\r\n        }\r\n        else {\r\n            result = array[method].apply(self, arguments);\r\n        }\r\n        _$dispatch(self._root, self._key, old, self.slice());\r\n        return result;\r\n    };\r\n});\r\n_$List.prototype.pull = function (index) {\r\n    var self = this;\r\n    var items = _$toArgs(arguments, 1);\r\n    var length = self.length;\r\n    if (index > length) {\r\n        length = index + 1;\r\n        var pull = new Array(index - self.length);\r\n        pull.push.apply(pull, items);\r\n        for (var i = 0; i < length; i++) {\r\n            if (i === index) {\r\n                self.push.apply(self, pull);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        self.splice.apply(self, [index, 1].concat(items));\r\n    }\r\n};\r\nfunction _$dispatch(root, key, oldVal, value) {\r\n    root.$notify(key);\r\n    if (root._watchers[key]) {\r\n        _$e(root._watchers[key], function (watcher) { watcher(oldVal, value); });\r\n    }\r\n    root.$update();\r\n}\r\nfunction _$isType(value, type) {\r\n    return _$type(type) === 'string' ? type.split('\\|').some(function (t) { return t.trim() === _$type(value); }) : value instanceof type;\r\n}\r\nfunction _$isObject(obj) {\r\n    return _$isType(obj, 'object');\r\n}\r\nfunction _$isArray(obj) {\r\n    return Array.isArray ? Array.isArray(obj) : _$isType(obj, 'array');\r\n}\r\nfunction _$toType(value, type, root, key) {\r\n    switch (type) {\r\n        case 'date':\r\n            return new Date(value);\r\n        case 'string':\r\n            return value.toString();\r\n        case 'number':\r\n            return +value;\r\n        case 'boolean':\r\n            return !!value;\r\n        case 'array':\r\n            return _$isType(value, _$List) ? value : new _$List(value, root, key);\r\n        default:\r\n            return value;\r\n    }\r\n}\r\nfunction _$type(obj) {\r\n    return /\\[object (\\w+)\\]/.exec(Object.prototype.toString.call(obj))[1].toLowerCase();\r\n}\r\nfunction _$hasProp(obj, prop) {\r\n    return obj.hasOwnProperty(prop);\r\n}\r\nfunction _$drt(directive) {\r\n    var hasProp = function (prop, instance, options, element) { return _$isObject(directive) && directive[prop] && directive[prop](instance, options, element); };\r\n    return {\r\n        $init: function (instance, options, element) {\r\n            hasProp('$init', instance, options, element);\r\n        },\r\n        $inserted: function (instance, options, element) {\r\n            hasProp('$inserted', instance, options, element);\r\n        },\r\n        $update: function (instance, options, element) {\r\n            if (_$isType(directive, 'function')) {\r\n                directive(instance, options, element);\r\n            }\r\n            else {\r\n                hasProp('$update', instance, options, element);\r\n            }\r\n        },\r\n        $destroy: function (instance, options, element) {\r\n            hasProp('$destroy', instance, options, element);\r\n        }\r\n    };\r\n}\r\nfunction _$noop() { }\r\nfunction _$add(inst, child) {\r\n    inst.$children.push(child);\r\n}\r\nfunction _$remove(inst, child) {\r\n    var index = inst.$children.indexOf(child);\r\n    index >= 0 && inst.$children.splice(index, 1);\r\n}\r\nfunction _$toStr(obj) {\r\n    var str = _$type(obj);\r\n    return !/null|undefined/.test(str) ? obj.toString() : str;\r\n}\r\nfunction _$toPlainObj(obj) {\r\n    var data = {};\r\n    _$e(_$isObject(obj) ? obj : {}, function (_v, k) {\r\n        if (k[0] !== '$' && !_$isType(obj[k], 'function')) {\r\n            if (_$isType(obj[k], _$List)) {\r\n                data[k] = obj[k].map(_$toPlainObj);\r\n            }\r\n            else if (_$isObject(obj[k])) {\r\n                data[k] = _$toPlainObj(obj[k]);\r\n            }\r\n            else {\r\n                data[k] = obj[k];\r\n            }\r\n        }\r\n    });\r\n    return _$isObject(obj) ? data : obj;\r\n}\r\nfunction _$setRef(obj, prop) {\r\n    var value = [];\r\n    _$def(obj, prop, {\r\n        get: function () {\r\n            return value.length <= 1 ? value[0] : value;\r\n        },\r\n        set: function (val) {\r\n            if (val && !~value.indexOf(val)) {\r\n                value.push(val);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n}\r\nfunction _$accesor(object, path, value) {\r\n    return path.split('.').reduce(function (obj, key, i, arr) {\r\n        if (_$isType(value, 'undefined')) {\r\n            if (obj == null) {\r\n                arr.splice(0, arr.length);\r\n                return i > 0 && obj === null ? obj : undefined;\r\n            }\r\n        }\r\n        else {\r\n            if (i === arr.length - 1) {\r\n                if (_$isType(obj, _$List) && (+key).toString() === key) {\r\n                    obj.pull(+key, value);\r\n                }\r\n                else {\r\n                    var oldVal = obj[key];\r\n                    obj[key] = !_$isType(value, _$List) && _$isArray(value) ? new _$List(value, object, key) : value;\r\n                    _$dispatch(object, path, oldVal, obj[key]);\r\n                }\r\n            }\r\n            else if (!_$isObject(obj[key])) {\r\n                obj[key] = {};\r\n            }\r\n        }\r\n        return obj ? obj[key] : null;\r\n    }, object);\r\n}\r\nfunction _$emptyElse() {\r\n    return { type: 'empty-else', $create: _$noop, $mount: _$noop, $update: _$noop, $destroy: _$noop };\r\n}\r\nfunction _$subs(dep, listener) {\r\n    if (!this._subscribers[dep]) {\r\n        this._subscribers[dep] = [];\r\n    }\r\n    return this._subscribers[dep].push(listener.bind(this)) - 1;\r\n}\r\nfunction _$def(obj, key, desc) {\r\n    Object.defineProperty(obj, key, desc);\r\n}\r\nfunction _$isKey(event, key) {\r\n    return event.key.toLowerCase() === key || !!event[key + \"Key\"];\r\n}\r\nfunction _$bindGroup(input, selection) {\r\n    var _$index = selection.indexOf(input.value);\r\n    if (input.checked && !~_$index)\r\n        selection.push(input.value);\r\n    else\r\n        selection.splice(_$index, 1);\r\n}\r\nfunction _$(selector, parent) {\r\n    return _$isType(selector, 'string') ? (parent || document).querySelector(selector) : selector;\r\n}\r\nfunction _$d() {\r\n    return document.createDocumentFragment();\r\n}\r\nfunction _$a(parent, child, sibling) {\r\n    if (_$isType(sibling, 'boolean') && sibling)\r\n        parent.parentElement.replaceChild(child, parent);\r\n    else if (!sibling)\r\n        parent.appendChild(child);\r\n    else\r\n        parent.insertBefore(child, sibling);\r\n}\r\nfunction _$as(source, dest) {\r\n    var childNodes = source.childNodes;\r\n    var attributes = source.attributes;\r\n    for (var i = 0; i < childNodes.length; i++) {\r\n        _$a(dest, childNodes[i]);\r\n    }\r\n    for (var i = 0; i < attributes.length; i++) {\r\n        var attr = attributes[i];\r\n        dest.setAttributeNS(source.namespaceURI, attr.name, attr.value);\r\n    }\r\n    source.parentElement.replaceChild(dest, source);\r\n    return dest;\r\n}\r\nfunction _$r(el, parent) {\r\n    var root = parent || el.parentElement;\r\n    if (root)\r\n        root.removeChild(el);\r\n}\r\nfunction _$ce(tagName) {\r\n    return document.createElement(tagName || 'div');\r\n}\r\nfunction _$cse(tagName) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', tagName || 'svg');\r\n}\r\nfunction _$ct(content) {\r\n    return document.createTextNode(content || '');\r\n}\r\nfunction _$cm(content) {\r\n    return document.createComment(content || '');\r\n}\r\nfunction _$sa(el, attr, value) {\r\n    el.setAttribute(attr, value);\r\n}\r\nfunction _$ga(el, attr) {\r\n    return el.getAttribute(attr);\r\n}\r\nfunction _$al(el, event, handler) {\r\n    el.addEventListener(event, handler, false);\r\n}\r\nfunction _$ul(el, event, oldHandler, newHandler) {\r\n    _$rl(el, event, oldHandler);\r\n    _$al(el, event, oldHandler = newHandler);\r\n    return oldHandler;\r\n}\r\nfunction _$rl(el, event, handler) {\r\n    el.removeEventListener(event, handler, false);\r\n}\r\nfunction _$bc(value) {\r\n    var classes = '';\r\n    if (_$isType(value, 'string')) {\r\n        classes += \" \" + value;\r\n    }\r\n    else if (_$isArray(value)) {\r\n        classes = value.map(_$bc).join(' ');\r\n    }\r\n    else if (_$isObject(value)) {\r\n        for (var key in value)\r\n            if (_$hasProp(value, key) && value[key])\r\n                classes += \" \" + key;\r\n    }\r\n    return classes.trim();\r\n}\r\nfunction _$bs(value) {\r\n    var el = _$ce();\r\n    if (_$isObject(value)) {\r\n        var style_1 = el.style;\r\n        _$e(value, function (val, prop) {\r\n            if (val !== style_1[prop]) {\r\n                style_1[prop] = val;\r\n            }\r\n        });\r\n        return style_1.cssText;\r\n    }\r\n    else if (_$isType(value, 'string')) {\r\n        return value;\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\nfunction _$f(root, obj, loop) {\r\n    var items = {}, loopParent, loopSibling;\r\n    var globs = _$toArgs(arguments, 3);\r\n    _$e(obj, function (item, i) { items[i] = loop.apply(null, [root, item, i].concat(globs)); });\r\n    return {\r\n        $create: function () {\r\n            _$e(items, function (item) { item.$create(); });\r\n        },\r\n        $mount: function (parent, sibling) {\r\n            loopParent = _$(parent);\r\n            loopSibling = _$(sibling);\r\n            _$e(items, function (item) { item.$mount(loopParent, loopSibling); });\r\n        },\r\n        $update: function (root, obj) {\r\n            var globs = _$toArgs(arguments, 2);\r\n            _$e(items, function (item, i) {\r\n                if (obj[i]) {\r\n                    item.$update.apply(item, [root, obj[i], i].concat(globs));\r\n                }\r\n                else {\r\n                    item.$destroy();\r\n                    delete items[i];\r\n                }\r\n            });\r\n            _$e(obj, function (item, i) {\r\n                if (!items[i]) {\r\n                    items[i] = loop.apply(null, [root, item, i].concat(globs));\r\n                    items[i].$create();\r\n                    items[i].$mount(loopParent, loopSibling);\r\n                }\r\n            });\r\n        },\r\n        $destroy: function () {\r\n            _$e(items, function (item) { item.$destroy(); });\r\n        }\r\n    };\r\n}\r\nfunction _$e(obj, cb) {\r\n    for (var key in obj) {\r\n        if (_$hasProp(obj, key)) {\r\n            cb(obj[key], (isNaN(+key) ? key : +key));\r\n        }\r\n    }\r\n}\r\nfunction _$is(id, css) {\r\n    var isNew = false;\r\n    var style = _$(\"#\" + id, document.head);\r\n    if (!style) {\r\n        isNew = true;\r\n        style = _$ce('style');\r\n        style.id = id;\r\n        _$sa(style, 'refs', '1');\r\n    }\r\n    if (style.textContent !== css) {\r\n        style.textContent = css;\r\n    }\r\n    if (isNew) {\r\n        _$a(document.head, style);\r\n    }\r\n    else {\r\n        var count = +_$ga(style, 'refs');\r\n        _$sa(style, 'refs', (++count).toString());\r\n    }\r\n}\r\nfunction _$ds(id) {\r\n    var style = _$(\"#\" + id, document.head);\r\n    if (style) {\r\n        var count = +_$ga(style, 'refs');\r\n        if (--count === 0) {\r\n            _$r(style, document.head);\r\n        }\r\n        else {\r\n            _$sa(style, 'refs', count.toString());\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map\n// CONCATENATED MODULE: ./components/todo.ts\nvar filters = {\r\n    actives: function (todos) {\r\n        return todos.filter(function (todo) { return !todo.completed; });\r\n    },\r\n    filterByView: function (todos, view) {\r\n        switch (view) {\r\n            case 'active':\r\n                return todos.filter(function (todo) { return !todo.completed; });\r\n            case 'completed':\r\n                return todos.filter(function (todo) { return todo.completed; });\r\n            default:\r\n                return todos;\r\n        }\r\n    },\r\n    pluralize: function (word, count) {\r\n        return \"\" + word + (count > 1 ? 's' : '');\r\n    }\r\n};\r\nvar model = {\r\n    view: '',\r\n    todos: [],\r\n    newTodo: '',\r\n    oldTitle: '',\r\n    _allDone: false,\r\n    editedTodo: null,\r\n    get remaining() {\r\n        return this.$filters.actives(this.todos).length;\r\n    },\r\n    get allDone() {\r\n        return this._allDone || this.remaining === 0;\r\n    },\r\n    set allDone(value) {\r\n        this._allDone = value;\r\n    },\r\n    mark: function (item, value) {\r\n        this.$set(\"todos.\" + item + \".completed\", value);\r\n        this.$set('allDone', this.remaining === 0);\r\n    },\r\n    markAll: function (value) {\r\n        this.todos.forEach(function (todo) { todo.completed = value; });\r\n        this.$set('allDone', value);\r\n    },\r\n    addTodo: function () {\r\n        var title = this.newTodo && this.newTodo.trim();\r\n        if (!title)\r\n            return;\r\n        this.newTodo = '';\r\n        this.todos.push({ title: title, completed: false });\r\n        this.$set('allDone', this.remaining === 0);\r\n    },\r\n    editTodo: function (todo) {\r\n        this.editedTodo = todo;\r\n        this.oldTitle = todo.title;\r\n        this.$update();\r\n    },\r\n    doneEdit: function (todo, e) {\r\n        if (e.key === 'Enter') {\r\n            todo.title = todo.title.trim();\r\n            if (!todo.title) {\r\n                this.removeTodo(todo);\r\n            }\r\n            this.clearTmps();\r\n        }\r\n        else if (e.key === 'Escape') {\r\n            todo.title = this.oldTitle;\r\n            this.clearTmps();\r\n        }\r\n    },\r\n    removeTodo: function (todo) {\r\n        var index = this.todos.indexOf(todo);\r\n        this.todos.splice(index, 1);\r\n        this.$set('allDone', this.remaining === 0);\r\n    },\r\n    removeCompleted: function () {\r\n        this.$set('todos', this.$filters.actives(this.todos));\r\n    },\r\n    clearTmps: function () {\r\n        this.editedTodo = null;\r\n        this.oldTitle = '';\r\n        this.$update();\r\n    }\r\n};\r\nvar directives = {\r\n    'focus-edit': function (_inst, options, el) {\r\n        if (options.value) {\r\n            el.focus();\r\n        }\r\n    }\r\n};\r\n/* harmony default export */ var components_todo = ({ model: model, filters: filters, directives: directives });\r\n\n// CONCATENATED MODULE: ./components/todo.html\n\n\nfunction itemLoop_1(_$state, todo, i) {\n  var _$frag, li_1, div_1, input_1, bindCheckedInput_1, changeEvent_1, handlerChangeEvent_1, label_1, txt_1, setTxt_1, dblclickEvent_1, handlerDblclickEvent_1, button_1, clickEvent_1, handlerClickEvent_1, input_2, focusEditDirective, inputEvent_1, handlerInputEvent_1, bindValueInput_2, blurEvent_1, handlerBlurEvent_1, keyupEvent_1, handlerKeyupEvent_1, bindClassLi_1;\n  _$frag = _$d();\n  bindCheckedInput_1 = function (_$state, todo) {\n    return todo.completed;\n  };\n  changeEvent_1 = function (_$state, todo, i, $event, $el) {\n    _$state.mark(i, $el.checked);\n  };\n  setTxt_1 = function (_$state, todo) {\n    return todo.title;\n  };\n  dblclickEvent_1 = function (_$state, todo, i) {\n    _$state.editTodo(todo, i);\n  };\n  clickEvent_1 = function (_$state, todo) {\n    _$state.removeTodo(todo);\n  };\n  focusEditDirective = _$state.$directives['focus-edit'];\n  inputEvent_1 = function (_$state, todo, i, $event, $el) {\n    todo.title = $el.value;\n  };\n  bindValueInput_2 = function (_$state, todo) {\n    return todo.title;\n  };\n  blurEvent_1 = function (_$state) {\n    _$state.$set('editedTodo', null);\n  };\n  keyupEvent_1 = function (_$state, todo, i, $event) {\n    _$state.doneEdit(todo, $event);\n  };\n  bindClassLi_1 = function (_$state, todo) {\n    return ('scope_4827b611 todo ' + _$bc({\n      completed: todo.completed,\n      editing: todo === _$state.editedTodo\n    })).trim();\n  };\n  return {\n    $create: function () {\n      li_1 = _$ce('li');\n      div_1 = _$ce();\n      input_1 = _$ce('input');\n      label_1 = _$ce('label');\n      txt_1 = _$ct();\n      txt_1.data = setTxt_1(_$state, todo, i);\n      button_1 = _$ce('button');\n      input_2 = _$ce('input');\n      this.$hydrate();\n    },\n    $hydrate: function () {\n      input_1.checked = !!bindCheckedInput_1(_$state, todo, i);\n      _$al(input_1, 'change', handlerChangeEvent_1 = function (event) {\n        changeEvent_1(_$state, todo, i, event, input_1);\n      });\n      _$sa(input_1, 'class', 'scope_4827b611 toggle');\n      _$sa(input_1, 'type', 'checkbox');\n      _$al(label_1, 'dblclick', handlerDblclickEvent_1 = function (event) {\n        dblclickEvent_1(_$state, todo, i, event, label_1);\n      });\n      _$sa(label_1, 'class', 'scope_4827b611');\n      _$al(button_1, 'click', handlerClickEvent_1 = function (event) {\n        clickEvent_1(_$state, todo, i, event, button_1);\n      });\n      _$sa(button_1, 'class', 'scope_4827b611 destroy');\n      _$sa(div_1, 'class', 'scope_4827b611 view');\n      focusEditDirective.$init(_$state, {\n        value: todo === _$state.editedTodo,\n        expression: 'todo === editedTodo',\n        modifiers: {}\n      }, input_2);\n      _$al(input_2, 'input', handlerInputEvent_1 = function (event) {\n        inputEvent_1(_$state, todo, i, event, input_2);\n      });\n      input_2.value = _$toStr(bindValueInput_2(_$state, todo, i));\n      _$al(input_2, 'blur', handlerBlurEvent_1 = function (event) {\n        blurEvent_1(_$state, todo, i, event, input_2);\n      });\n      _$al(input_2, 'keyup', handlerKeyupEvent_1 = function (event) {\n        keyupEvent_1(_$state, todo, i, event, input_2);\n      });\n      _$sa(input_2, 'type', 'text');\n      _$sa(input_2, 'class', 'scope_4827b611 edit');\n      _$sa(li_1, 'class', _$toStr(bindClassLi_1(_$state, todo, i)));\n    },\n    $mount: function (parent, sibling) {\n      this.$unmount();\n      _$a(_$(parent), _$frag, _$(sibling));\n      focusEditDirective.$inserted(_$state, {\n        value: todo === _$state.editedTodo,\n        expression: 'todo === editedTodo',\n        modifiers: {}\n      }, input_2);\n    },\n    $update: function (_$state, todo, i) {\n      var updateCheckedInput_1 = !!bindCheckedInput_1(_$state, todo, i);\n      if (input_1.checked !== updateCheckedInput_1) {\n        input_1.checked = updateCheckedInput_1;\n      }\n      updateCheckedInput_1 = void 0;\n      handlerChangeEvent_1 = _$ul(input_1, 'change', handlerChangeEvent_1, function (event) {\n        changeEvent_1(_$state, todo, i, event, input_1);\n      });\n      var updateTxt_1 = setTxt_1(_$state, todo, i);\n      if (txt_1.data !== _$toStr(updateTxt_1)) {\n        txt_1.data = updateTxt_1;\n      }\n      updateTxt_1 = void 0;\n      handlerDblclickEvent_1 = _$ul(label_1, 'dblclick', handlerDblclickEvent_1, function (event) {\n        dblclickEvent_1(_$state, todo, i, event, label_1);\n      });\n      handlerClickEvent_1 = _$ul(button_1, 'click', handlerClickEvent_1, function (event) {\n        clickEvent_1(_$state, todo, i, event, button_1);\n      });\n      focusEditDirective.$update(_$state, {\n        value: todo === _$state.editedTodo,\n        expression: 'todo === editedTodo',\n        modifiers: {}\n      }, input_2);\n      handlerInputEvent_1 = _$ul(input_2, 'input', handlerInputEvent_1, function (event) {\n        inputEvent_1(_$state, todo, i, event, input_2);\n      });\n      var updateValueInput_2 = _$toStr(bindValueInput_2(_$state, todo, i));\n      if (input_2.value !== updateValueInput_2) {\n        input_2.value = updateValueInput_2;\n      }\n      updateValueInput_2 = void 0;\n      handlerBlurEvent_1 = _$ul(input_2, 'blur', handlerBlurEvent_1, function (event) {\n        blurEvent_1(_$state, todo, i, event, input_2);\n      });\n      handlerKeyupEvent_1 = _$ul(input_2, 'keyup', handlerKeyupEvent_1, function (event) {\n        keyupEvent_1(_$state, todo, i, event, input_2);\n      });\n      var updateClassLi_1 = _$toStr(bindClassLi_1(_$state, todo, i));\n      if (_$ga(li_1, 'class') !== updateClassLi_1) {\n        _$sa(li_1, 'class', updateClassLi_1);\n      }\n      updateClassLi_1 = void 0;\n    },\n    $unmount: function () {\n      _$a(div_1, input_1);\n      _$a(label_1, txt_1);\n      _$a(div_1, label_1);\n      _$a(div_1, button_1);\n      _$a(li_1, div_1);\n      _$a(li_1, input_2);\n      _$a(_$frag, li_1);\n    },\n    $destroy: function () {\n      this.$unmount();\n      _$rl(input_1, 'change', handlerChangeEvent_1);\n      _$rl(label_1, 'dblclick', handlerDblclickEvent_1);\n      _$rl(button_1, 'click', handlerClickEvent_1);\n      focusEditDirective.$destroy(_$state, {\n        value: todo === _$state.editedTodo,\n        expression: 'todo === editedTodo',\n        modifiers: {}\n      }, input_2);\n      _$rl(input_2, 'input', handlerInputEvent_1);\n      _$rl(input_2, 'blur', handlerBlurEvent_1);\n      _$rl(input_2, 'keyup', handlerKeyupEvent_1);\n      _$frag = li_1 = div_1 = input_1 = bindCheckedInput_1 = changeEvent_1 = handlerChangeEvent_1 = label_1 = txt_1 = setTxt_1 = dblclickEvent_1 = handlerDblclickEvent_1 = button_1 = clickEvent_1 = handlerClickEvent_1 = input_2 = focusEditDirective = inputEvent_1 = handlerInputEvent_1 = bindValueInput_2 = blurEvent_1 = handlerBlurEvent_1 = keyupEvent_1 = handlerKeyupEvent_1 = bindClassLi_1 = void 0;\n    }\n  };\n}\nfunction _$tplTodo(_$state) {\n  var _$frag, section_1, header_1, h1_1, txt_1, input_1, inputEvent_1, handlerInputEvent_1, bindValueInput_1, keyupEvent_1, handlerKeyupEvent_1, section_2, input_2, bindCheckedInput_2, changeEvent_1, handlerChangeEvent_1, label_1, txt_2, ul_1, loopAnchor_1_1, loopBlock_1, displaySection_2, footer_1, span_1, txt_3, setTxt_3, ul_2, li_1, a_1, txt_4, bindClassA_1, clickEvent_1, handlerClickEvent_1, li_2, a_2, txt_5, bindClassA_2, clickEvent_2, handlerClickEvent_2, li_3, a_3, txt_6, bindClassA_3, clickEvent_3, handlerClickEvent_3, button_1, txt_7, clickEvent_4, handlerClickEvent_4, displayButton_1, displayFooter_1;\n  _$frag = _$d();\n  inputEvent_1 = function (_$state, $event, $el) {\n    _$state.$set('newTodo', $el.value);\n  };\n  bindValueInput_1 = function (_$state) {\n    return _$state.newTodo;\n  };\n  keyupEvent_1 = function (_$state) {\n    _$state.addTodo();\n  };\n  bindCheckedInput_2 = function (_$state) {\n    return _$state.allDone;\n  };\n  changeEvent_1 = function (_$state, $event, $el) {\n    _$state.markAll($el.checked);\n  };\n  loopBlock_1 = _$f(_$state, _$state.$filters.filterByView(_$state.todos, _$state.view), itemLoop_1);\n  loopAnchor_1_1 = _$ct();\n  var showSection_2 = function (_$state, el, display) {\n    el.style.display = _$state.todos.length ? display : 'none';\n  };\n  setTxt_3 = function (_$state) {\n    return _$state.remaining + _$state.$filters.pluralize(' item', _$state.remaining) + ' left';\n  };\n  bindClassA_1 = function (_$state) {\n    return ('scope_4827b611 ' + _$bc({ selected: _$state.view === '' })).trim();\n  };\n  clickEvent_1 = function (_$state) {\n    _$state.$set('view', '');\n  };\n  bindClassA_2 = function (_$state) {\n    return ('scope_4827b611 ' + _$bc({ selected: _$state.view === 'active' })).trim();\n  };\n  clickEvent_2 = function (_$state) {\n    _$state.$set('view', 'active');\n  };\n  bindClassA_3 = function (_$state) {\n    return ('scope_4827b611 ' + _$bc({ selected: _$state.view === 'completed' })).trim();\n  };\n  clickEvent_3 = function (_$state) {\n    _$state.$set('view', 'completed');\n  };\n  clickEvent_4 = function (_$state) {\n    _$state.removeCompleted();\n  };\n  var showButton_1 = function (_$state, el, display) {\n    el.style.display = _$state.todos.length > _$state.remaining ? display : 'none';\n  };\n  var showFooter_1 = function (_$state, el, display) {\n    el.style.display = _$state.todos.length ? display : 'none';\n  };\n  return {\n    $create: function () {\n      section_1 = _$ce('section');\n      header_1 = _$ce('header');\n      h1_1 = _$ce('h1');\n      txt_1 = _$ct('todos');\n      input_1 = _$ce('input');\n      section_2 = _$ce('section');\n      input_2 = _$ce('input');\n      label_1 = _$ce('label');\n      txt_2 = _$ct('Mark all as complete');\n      ul_1 = _$ce('ul');\n      loopBlock_1.$create();\n      footer_1 = _$ce('footer');\n      span_1 = _$ce('span');\n      txt_3 = _$ct();\n      txt_3.data = setTxt_3(_$state);\n      ul_2 = _$ce('ul');\n      li_1 = _$ce('li');\n      a_1 = _$ce('a');\n      txt_4 = _$ct('All');\n      li_2 = _$ce('li');\n      a_2 = _$ce('a');\n      txt_5 = _$ct('Active');\n      li_3 = _$ce('li');\n      a_3 = _$ce('a');\n      txt_6 = _$ct('Completed');\n      button_1 = _$ce('button');\n      txt_7 = _$ct(' Clear completed ');\n      this.$hydrate();\n    },\n    $hydrate: function () {\n      _$sa(h1_1, 'class', 'scope_4827b611');\n      _$al(input_1, 'input', handlerInputEvent_1 = function (event) {\n        inputEvent_1(_$state, event, input_1);\n      });\n      input_1.value = _$toStr(bindValueInput_1(_$state));\n      _$al(input_1, 'keyup', handlerKeyupEvent_1 = function (event) {\n        if (_$isKey(event, 'enter')) {\n          keyupEvent_1(_$state, event, input_1);\n        }\n      });\n      _$sa(input_1, 'class', 'scope_4827b611 new-todo');\n      _$sa(input_1, 'placeholder', 'What needs to be done?');\n      _$sa(input_1, 'autofocus', '');\n      _$sa(header_1, 'class', 'scope_4827b611 header');\n      input_2.checked = !!bindCheckedInput_2(_$state);\n      _$al(input_2, 'change', handlerChangeEvent_1 = function (event) {\n        changeEvent_1(_$state, event, input_2);\n      });\n      _$sa(input_2, 'class', 'scope_4827b611 toggle-all');\n      _$sa(input_2, 'type', 'checkbox');\n      _$sa(label_1, 'for', 'toggle-all');\n      _$sa(label_1, 'class', 'scope_4827b611');\n      _$sa(ul_1, 'class', 'scope_4827b611 todo-list');\n      displaySection_2 = section_2.style.display;\n      showSection_2(_$state, section_2, displaySection_2);\n      _$sa(section_2, 'class', 'scope_4827b611 main');\n      _$sa(span_1, 'class', 'scope_4827b611 todo-count');\n      _$sa(a_1, 'class', _$toStr(bindClassA_1(_$state)));\n      _$al(a_1, 'click', handlerClickEvent_1 = function (event) {\n        clickEvent_1(_$state, event, a_1);\n      });\n      _$sa(a_1, 'href', '#/');\n      _$sa(li_1, 'class', 'scope_4827b611');\n      _$sa(a_2, 'class', _$toStr(bindClassA_2(_$state)));\n      _$al(a_2, 'click', handlerClickEvent_2 = function (event) {\n        clickEvent_2(_$state, event, a_2);\n      });\n      _$sa(a_2, 'href', '#/active');\n      _$sa(li_2, 'class', 'scope_4827b611');\n      _$sa(a_3, 'class', _$toStr(bindClassA_3(_$state)));\n      _$al(a_3, 'click', handlerClickEvent_3 = function (event) {\n        clickEvent_3(_$state, event, a_3);\n      });\n      _$sa(a_3, 'href', '#/completed');\n      _$sa(li_3, 'class', 'scope_4827b611');\n      _$sa(ul_2, 'class', 'scope_4827b611 filters');\n      _$al(button_1, 'click', handlerClickEvent_4 = function (event) {\n        clickEvent_4(_$state, event, button_1);\n      });\n      displayButton_1 = button_1.style.display;\n      showButton_1(_$state, button_1, displayButton_1);\n      _$sa(button_1, 'class', 'scope_4827b611 clear-completed');\n      displayFooter_1 = footer_1.style.display;\n      showFooter_1(_$state, footer_1, displayFooter_1);\n      _$sa(footer_1, 'class', 'scope_4827b611 footer');\n      _$sa(section_1, 'class', 'scope_4827b611 todoapp');\n    },\n    $mount: function (parent, sibling) {\n      this.$unmount();\n      _$is('scope_4827b611', '.scope_4827b611.view label.scope_4827b611{user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;}');\n      _$a(_$(parent), _$frag, _$(sibling));\n      this.$siblingEl = _$(sibling);\n      this.$parentEl = sibling && _$(sibling).parentElement || _$(parent);\n    },\n    $update: function (_$state) {\n      var updateValueInput_1 = _$toStr(bindValueInput_1(_$state));\n      if (input_1.value !== updateValueInput_1) {\n        input_1.value = updateValueInput_1;\n      }\n      updateValueInput_1 = void 0;\n      var updateCheckedInput_2 = !!bindCheckedInput_2(_$state);\n      if (input_2.checked !== updateCheckedInput_2) {\n        input_2.checked = updateCheckedInput_2;\n      }\n      updateCheckedInput_2 = void 0;\n      loopBlock_1.$update(_$state, _$state.$filters.filterByView(_$state.todos, _$state.view));\n      showSection_2(_$state, section_2, displaySection_2);\n      var updateTxt_3 = setTxt_3(_$state);\n      if (txt_3.data !== _$toStr(updateTxt_3)) {\n        txt_3.data = updateTxt_3;\n      }\n      updateTxt_3 = void 0;\n      var updateClassA_1 = _$toStr(bindClassA_1(_$state));\n      if (_$ga(a_1, 'class') !== updateClassA_1) {\n        _$sa(a_1, 'class', updateClassA_1);\n      }\n      updateClassA_1 = void 0;\n      var updateClassA_2 = _$toStr(bindClassA_2(_$state));\n      if (_$ga(a_2, 'class') !== updateClassA_2) {\n        _$sa(a_2, 'class', updateClassA_2);\n      }\n      updateClassA_2 = void 0;\n      var updateClassA_3 = _$toStr(bindClassA_3(_$state));\n      if (_$ga(a_3, 'class') !== updateClassA_3) {\n        _$sa(a_3, 'class', updateClassA_3);\n      }\n      updateClassA_3 = void 0;\n      showButton_1(_$state, button_1, displayButton_1);\n      showFooter_1(_$state, footer_1, displayFooter_1);\n    },\n    $unmount: function () {\n      _$a(h1_1, txt_1);\n      _$a(header_1, h1_1);\n      _$a(header_1, input_1);\n      _$a(section_1, header_1);\n      _$a(section_2, input_2);\n      _$a(label_1, txt_2);\n      _$a(section_2, label_1);\n      _$a(ul_1, loopAnchor_1_1);\n      loopBlock_1.$mount(ul_1, loopAnchor_1_1);\n      _$a(section_2, ul_1);\n      _$a(section_1, section_2);\n      _$a(span_1, txt_3);\n      _$a(footer_1, span_1);\n      _$a(a_1, txt_4);\n      _$a(li_1, a_1);\n      _$a(ul_2, li_1);\n      _$a(a_2, txt_5);\n      _$a(li_2, a_2);\n      _$a(ul_2, li_2);\n      _$a(a_3, txt_6);\n      _$a(li_3, a_3);\n      _$a(ul_2, li_3);\n      _$a(footer_1, ul_2);\n      _$a(button_1, txt_7);\n      _$a(footer_1, button_1);\n      _$a(section_1, footer_1);\n      _$a(_$frag, section_1);\n    },\n    $destroy: function () {\n      this.$unmount();\n      this.$parent = null;\n      this.$parentEl = null;\n      this.$siblingEl = null;\n      this.$children.splice(0, this.$children.length);\n      _$ds('scope_4827b611');\n      _$rl(input_1, 'input', handlerInputEvent_1);\n      _$rl(input_1, 'keyup', handlerKeyupEvent_1);\n      _$rl(input_2, 'change', handlerChangeEvent_1);\n      loopBlock_1.$destroy();\n      _$rl(a_1, 'click', handlerClickEvent_1);\n      _$rl(a_2, 'click', handlerClickEvent_2);\n      _$rl(a_3, 'click', handlerClickEvent_3);\n      _$rl(button_1, 'click', handlerClickEvent_4);\n      delete _$state.$root;\n      _$frag = section_1 = header_1 = h1_1 = txt_1 = input_1 = inputEvent_1 = handlerInputEvent_1 = bindValueInput_1 = keyupEvent_1 = handlerKeyupEvent_1 = section_2 = input_2 = bindCheckedInput_2 = changeEvent_1 = handlerChangeEvent_1 = label_1 = txt_2 = ul_1 = loopAnchor_1_1 = loopBlock_1 = displaySection_2 = footer_1 = span_1 = txt_3 = setTxt_3 = ul_2 = li_1 = a_1 = txt_4 = bindClassA_1 = clickEvent_1 = handlerClickEvent_1 = li_2 = a_2 = txt_5 = bindClassA_2 = clickEvent_2 = handlerClickEvent_2 = li_3 = a_3 = txt_6 = bindClassA_3 = clickEvent_3 = handlerClickEvent_3 = button_1 = txt_7 = clickEvent_4 = handlerClickEvent_4 = displayButton_1 = displayFooter_1 = void 0;\n    }\n  };\n}\nfunction Todo(_$attrs, _$parent) {\n  _$CompCtr.call(this, _$attrs, _$tplTodo, components_todo, _$parent);\n  !_$parent && this.$create();\n}\nTodo.plugin = _$plugin;\nTodo.prototype = Object.create(_$CompCtr.prototype);\nTodo.prototype.constructor = Todo;\n/* harmony default export */ var components_todo_0 = (Todo);\n// CONCATENATED MODULE: ./main.ts\n\r\nvar main_todo = new components_todo_0();\r\nmain_todo.$mount('main');\r\n\n\n//# sourceURL=webpack:///./main.ts_+_3_modules?");

/***/ })

/******/ });